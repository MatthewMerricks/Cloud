   '
   '  CloudClean.vbs
   '  Cloud Windows
   '
   '  Created by BobS.
   '  Copyright (c) Cloud.com. All rights reserved.
   '

   ' Parameter: The program files path for the 32-bit files.  e.g., C:\Program Files (x86) for 64-bit platform.
   ' Parameter: The program files path for the 64-bit files.  e.g., C:\Program Files for 64-bit platform.
   ' Parameter: The Explorer.exe path.  e.g., c:\Windows
   ' Call as "C:\Windows\SysWOW64\cscript.exe" //B //T:5 //Nologo "<path to this CloudClean.vbs file>" "C:\Program Files (x86)" "c:\Program Files" "c:\Windows"
   
   Option Explicit

   Const ForReading = 1
   Const ForWriting = 2
   Const ForAppending = 8
   
   Dim filesys
   Dim objShell
 
   ' Global variables
   Dim shouldTrace
   Dim shouldExplorerBeStarted
   Dim sExplorerPath
   Dim logFileFullPath
   Dim sScriptFile
   
   Set filesys = wscript.CreateObject("Scripting.FileSystemObject") 
   Set objShell = wscript.createObject("wscript.shell") 
 
   shouldTrace = True
   shouldExplorerBeStarted = True
   logFileFullPath = filesys.GetSpecialFolder(2) & "\CloudTrace.log"
   
   ' Trace function
   Sub WriteLog(LogMessage)
      Dim objLogFile
 
      If shouldTrace Then
         wscript.echo Now() & ": " & LogMessage
         Set objLogFile = filesys.OpenTextFile(logFileFullPath, ForAppending, TRUE)
         objLogFile.Writeline(Now() & ": " & LogMessage)
         objLogFile.Close
         set objLogFile = Nothing
      End If
   End Sub

   ' Check to see if Explorer is running   
   Function IsExplorerRunning(explorerPath)
      IsExplorerRunning = False
      Dim colProcesses
      Dim refProcess
      Dim objWMIService

      'WriteLog "CloudClean: IsExplorerRunning: Entry. explorerPath: " & explorerPath
      Set objWMIService = GetObject("winmgmts:\\.\root\CIMV2") 
      Set colProcesses = objWMIService.ExecQuery( "SELECT * FROM Win32_Process")

      'WriteLog "CloudClean: IsExplorerRunning: Loop through executing processes."
      For Each refProcess In colProcesses
         'WriteLog "CloudClean: IsExplorerRunning: Process name <" & refProcess.Name & ">, ExecutablePath <" & refProcess.ExecutablePath & ">."
         If UCase(refProcess.ExecutablePath) = UCase(explorerPath & "\explorer.exe") And UCase(refProcess.Name) = "EXPLORER.EXE" Then
            'WriteLog "CloudClean: IsExplorerRunning: Explorer is running."
            IsExplorerRunning = True
            Exit For
         End If
      Next
      'WriteLog "CloudClean: IsExplorerRunning: Exit rc: " & IsExplorerRunning
   End Function

   ' Kill any Explorer processes
   Sub KillExplorer(explorerPath)
      Dim colProcesses
      Dim refProcess
      Dim objWMIService

      'WriteLog "CloudClean: KillExplorer: Entry. explorerPath: " & explorerPath
      Set objWMIService = GetObject("winmgmts:\\.\root\CIMV2") 
      Set colProcesses = objWMIService.ExecQuery( "SELECT * FROM Win32_Process")

      'WriteLog "CloudClean: KillExplorer: Loop through executing processes."
      For Each refProcess In colProcesses
         'WriteLog "CloudClean: KillExplorer: Process name <" & refProcess.Name & ">, ExecutablePath <" & refProcess.ExecutablePath & ">."
         If UCase(refProcess.ExecutablePath) = UCase(explorerPath & "\explorer.exe") And UCase(refProcess.Name) = "EXPLORER.EXE" Then
            'WriteLog "CloudClean: KillExplorer: Explorer is running."
            refProcess.Terminate()
         End If
      Next
      'WriteLog "CloudClean: KillExplorer: Exit."
   End Sub

   '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  MAIN PROGRAM @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
   ' Try pattern
   Class CloudClean
      Private Sub Class_Initialize
         WriteLog("CloudClean: Constructor entry.")
         ' Don't run if we don't have the necessary parameters
         WriteLog("CloudClean: Arg count: " & wscript.Arguments.Count)
         If wscript.Arguments.Count < 3 Then
            WriteLog("CloudClean: ERROR: Wrong arguments.")
            Exit Sub
         End If

         ' Allocate the objects we will need
         Dim sProgramFilesPath
         Dim sProgramFilesAlternatePath
         Dim sProgramFilesCloudPath
         Dim sProgramFilesCloudComPath
		 Dim sCommonFilesCloudPath
		 Dim sCommonFilesCloudComPath
		 Dim sCommonFilesCloudAlternatePath
		 Dim sCommonFilesCloudComAlternatePath
         Dim sTempFolderPath
         Dim folderCommon
         Dim folderCommonFiles
         Dim folderCloud
         Dim folderCloudFiles
         Dim folderCloudCom
         Dim folderCloudComFiles
         Dim i
		 Dim weAreDone

         ' Determine the program files directory to use
         sProgramFilesPath = wscript.Arguments(0)
		 sProgramFilesAlternatePath = wscript.Arguments(1)
         sExplorerPath = wscript.Arguments(2)
         sProgramFilesCloudPath = sProgramFilesPath & "\Cloud.com\Cloud"
         sProgramFilesCloudComPath = sProgramFilesPath & "\Cloud.com"
		 sCommonFilesCloudPath = sProgramFilesPath + "\Common Files\Cloud.com\Cloud"
		 sCommonFilesCloudComPath = sProgramFilesPath + "\Common Files\Cloud.com"
		 sCommonFilesCloudAlternatePath = sProgramFilesAlternatePath + "\Common Files\Cloud.com\Cloud"
		 sCommonFilesCloudComAlternatePath = sProgramFilesAlternatePath + "\Common Files\Cloud.com"

         ' Get the user's temp directory path
         sTempFolderPath = filesys.GetSpecialFolder(2)

         WriteLog "CloudClean: Explorer path:" & sExplorerPath
         WriteLog "CloudClean: sProgramFilesPath: " & sProgramFilesPath
         WriteLog "CloudClean: sProgramFilesAlternatePath: " & sProgramFilesAlternatePath
         WriteLog "CloudClean: sProgramFilesCloudPath: " & sProgramFilesCloudPath
         WriteLog "CloudClean: sProgramFilesCloudComPath: " & sProgramFilesCloudComPath
		 Writelog "CloudClean: sCommonFilesCloudPath: " & sCommonFilesCloudPath
		 Writelog "CloudClean: sCommonFilesCloudComPath: " & sCommonFilesCloudComPath
		 Writelog "CloudClean: sCommonFilesCloudAlternatePath: " & sCommonFilesCloudAlternatePath
		 Writelog "CloudClean: sCommonFilesCloudComAlternatePath: " & sCommonFilesCloudComAlternatePath

         WriteLog "CloudClean: sTempFolderPath: " & sTempFolderPath

         ' Loop trying to complete normally
         For i = 1 to 3
            ' Wait for 1 second
            WriteLog "CloudClean: Wait one second..."
            Wscript.Sleep 1000

            ' If Explorer is running, kill it (in case it wasn't killed before (as it should be by RegisterCom)).
            WriteLog "CloudClean: Check for Explorer running."
            if IsExplorerRunning(sExplorerPath) Then
              WriteLog "CloudClean: Kill Explorer."
              'KillExplorer(sExplorerPath)
              objShell.Run "taskkill /f /im explorer.exe", 0, true
              
              ' Wait for Explorer to exit
              WriteLog "CloudClean: Wait for Explorer to exit."
              Do While True
                 Wscript.Sleep 100
                 If Not IsExplorerRunning(sExplorerPath) Then
                    Exit Do
                 End If
              Loop
              WriteLog "CloudClean: Explorer exited."
            End If

            ' Delete the alternate BadgeCom.dll if it is present.
            If filesys.FileExists(sCommonFilesCloudAlternatePath & "\BadgeCom.dll") Then
               WriteLog "CloudClean: Delete file: " & sCommonFilesCloudAlternatePath & "\BadgeCom.dll"
               filesys.DeleteFile sCommonFilesCloudAlternatePath & "\BadgeCom.dll", True
            End If
            
            ' Deleting folders will fail if it is our current directory.  Change to the user's Temp directory to avoid this problem.
            WriteLog "CloudClean: Change to the temp directory: " & sTempFolderPath
            objShell.CurrentDirectory = sTempFolderPath

            ' Attempt to delete all files in the Common Files Cloud folder
            WriteLog "CloudClean: Does Common Files folder exist?"
            If filesys.FolderExists(sCommonFilesCloudPath & "\") Then
               WriteLog "CloudClean: Check for files in Common Files folder."
               set folderCommon = filesys.GetFolder(sCommonFilesCloudPath & "\")
               Set folderCommonFiles = folderCommon.Files
               If folderCommonFiles.Count > 0 Then
                  WriteLog "CloudClean: Delete all files in : " & sCommonFilesCloudPath
                  filesys.DeleteFile sCommonFilesCloudPath & "\*.*", True
               End If
            End If

            ' If the Common Files Cloud directory is empty now, delete the directory itself
            WriteLog "CloudClean: Does Common Files Cloud folder exist? (2)."
            If filesys.FolderExists(sCommonFilesCloudPath & "\") Then
               WriteLog "CloudClean: Check for files in Common Files folder (2)."
               set folderCommon = filesys.GetFolder(sCommonFilesCloudPath & "\")
               Set folderCommonFiles = folderCommon.Files
               If folderCommonFiles.Count = 0 Then
                  WriteLog "CloudClean: Delete folder: " & sCommonFilesCloudPath & "\"
                  filesys.DeleteFolder sCommonFilesCloudPath, True
               End If
            End If 

            ' If the Common Files Cloud.com directory is empty now, delete the directory itself
            WriteLog "CloudClean: Does Common Files Cloud.com folder exist? (2)."
            If filesys.FolderExists(sCommonFilesCloudComPath & "\") Then
               WriteLog "CloudClean: Check for files in Common Files Cloud.com folder (2)."
               set folderCommon = filesys.GetFolder(sCommonFilesCloudComPath & "\")
               Set folderCommonFiles = folderCommon.Files
               If folderCommonFiles.Count = 0 Then
                  WriteLog "CloudClean: Delete folder: " & sCommonFilesCloudComPath & "\"
                  filesys.DeleteFolder sCommonFilesCloudComPath, True
               End If
            End If 

			' Now delete everything in the alternate common directory
            ' Attempt to delete all files in the alternate Common Files Cloud folder
            WriteLog "CloudClean: Does Common Files folder exist?"
            If filesys.FolderExists(sCommonFilesCloudAlternatePath & "\") Then
               WriteLog "CloudClean: Check for files in alternate Common Files folder."
               set folderCommon = filesys.GetFolder(sCommonFilesCloudAlternatePath & "\")
               Set folderCommonFiles = folderCommon.Files
               If folderCommonFiles.Count > 0 Then
                  WriteLog "CloudClean: Delete all files in : " & sCommonFilesCloudAlternatePath
                  filesys.DeleteFile sCommonFilesCloudAlternatePath & "\*.*", True
               End If
            End If

            ' If the alternate Common Files Cloud directory is empty now, delete the directory itself
            WriteLog "CloudClean: Does the alternate Common Files folder exist? (2)."
            If filesys.FolderExists(sCommonFilesCloudAlternatePath & "\") Then
               WriteLog "CloudClean: Check for files in the alternate Common Files folder (2)."
               set folderCommon = filesys.GetFolder(sCommonFilesCloudAlternatePath & "\")
               Set folderCommonFiles = folderCommon.Files
               If folderCommonFiles.Count = 0 Then
                  WriteLog "CloudClean: Delete folder: " & sCommonFilesCloudAlternatePath & "\"
                  filesys.DeleteFolder sCommonFilesCloudAlternatePath, True
               End If
            End If 

            ' If the alternate Common Files Cloud.com directory is empty now, delete the directory itself
            WriteLog "CloudClean: Does the alternate Common Files Cloud.com folder exist? (2)."
            If filesys.FolderExists(sCommonFilesCloudComAlternatePath & "\") Then
               WriteLog "CloudClean: Check for files in the alternate Common Files Cloud.com folder (2)."
               set folderCommon = filesys.GetFolder(sCommonFilesCloudComAlternatePath & "\")
               Set folderCommonFiles = folderCommon.Files
               If folderCommonFiles.Count = 0 Then
                  WriteLog "CloudClean: Delete folder: " & sCommonFilesCloudComAlternatePath & "\"
                  filesys.DeleteFolder sCommonFilesCloudComAlternatePath, True
               End If
            End If 

            ' Delete the trace.log file in the Program Files Cloud directory
            WriteLog "CloudClean: Check for Trace.log file."
            If filesys.FileExists(sProgramFilesCloudPath + "\trace.log") Then
               WriteLog "CloudClean: Delete file: " & sProgramFilesCloudPath & "\trace.log"
               filesys.DeleteFile sProgramFilesCloudPath + "\trace.log", True
            End If

            ' If the Cloud directory is empty
            WriteLog "CloudClean: Does Cloud directory exist?"
            If filesys.FolderExists(sProgramFilesCloudPath & "\") Then
               WriteLog "CloudClean: Check for files in the Cloud directory."
               set folderCloud = filesys.GetFolder(sProgramFilesCloudPath & "\")
               Set folderCloudFiles = folderCloud.Files
               If folderCloudFiles.Count = 0 Then
                  WriteLog "CloudClean: Delete folder: " & sProgramFilesCloudPath & "\"
                  filesys.DeleteFolder sProgramFilesCloudPath, True
               End If
            End If

            ' If the Cloud.Com directory is empty
            WriteLog "CloudClean: Does Cloud.com directory exist?"
            If filesys.FolderExists(sProgramFilesCloudComPath & "\") Then
               WriteLog "CloudClean: Check for files in the Cloud.com directory."
               set folderCloudCom = filesys.GetFolder(sProgramFilesCloudComPath & "\")
               Set folderCloudComFiles = folderCloudCom.Files
               If folderCloudComFiles.Count = 0 Then
                  WriteLog "CloudClean: Delete folder: " & sProgramFilesCloudComPath & "\"
                  filesys.DeleteFolder sProgramFilesCloudComPath, True
               End If
            End If

            ' Check to see if we were successful at deleting the Program Files Cloud.com directory does not exist
			weAreDone = true
            WriteLog "CloudClean: Does Program Files Cloud.com directory exist (2)?"
            If filesys.FolderExists(sProgramFilesCloudComPath & "\") Then
               WriteLog "CloudClean: The program files Cloud.com folder still exists: " & sProgramFilesCloudComPath
			   weAreDone = false
            End If 

            ' Check to see if we were successful at deleting the Common Files Cloud.com directory does not exist
            WriteLog "CloudClean: Does Common Files Cloud.com directory exist (2)?"
            If filesys.FolderExists(sCommonFilesCloudComPath & "\") Then
               WriteLog "CloudClean: The common files Cloud.com folder still exists: " & sCommonFilesCloudComPath
			   weAreDone = false
            End If 

            ' Check to see if we were successful at deleting the Alternate Common Files Cloud.com directory does not exist
            WriteLog "CloudClean: Does Alternate Common Files Cloud.com directory exist (2)?"
            If filesys.FolderExists(sCommonFilesCloudComAlternatePath & "\") Then
               WriteLog "CloudClean: The alternate common files Cloud.com folder still exists: " & sCommonFilesCloudComAlternatePath
			   weAreDone = false
            End If 

			' Exit the loop if we are done
			if weAreDone then
			  Exit For
			end if
         Next

         ' Start Explorer
         WriteLog "CloudClean: Start Explorer: " & sExplorerPath & "\Explorer.exe"
         objShell.Run """" & sExplorerPath & "\Explorer.exe"""
         WriteLog "CloudClean: After starting Explorer."
         shouldExplorerBeStarted = False

         ' Free resources
         set folderCommon = Nothing
         Set folderCommonFiles = Nothing
         set folderCloud = Nothing
         Set folderCloudFiles = Nothing
         set folderCloudCom = Nothing
         Set folderCloudComFiles = Nothing

         WriteLog "CloudClean: Exit normally"
      End Sub : Private Sub CatchErr : If Err.Number = 0 Then Exit Sub
         ' Catch
         Select Case Err.Number
            Case Else WriteLog("CloudClean: Unhandled error " & Err.Number & " occurred.")
         End Select
      Err.Clear : End Sub : Private Sub Class_Terminate : CatchErr
         ' Finally
         WriteLog("CloudClean: Exiting constructor (finally).")
         if shouldExplorerBeStarted Then
            WriteLog "CloudClean: Start Explorer(2): " & sExplorerPath & "\Explorer.exe"
            objShell.Run """" & sExplorerPath & "\Explorer.exe"""
            WriteLog "CloudClean: After starting Explorer(2)."
         End If

         ' Delete ourselves.  This is possible because VBS runs everything out of memory.
         sScriptFile = Wscript.ScriptFullName
         WriteLog "CloudClean: CloudClean.vbs full path: " & sScriptFIle
         filesys.DeleteFile sScriptFile, True
      End Sub 
   End Class
   
   ' Drive the main program
   WriteLog("CloudClean: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@")
   WriteLog("CloudClean: Drive the main program.")
   With New CloudClean : End With
   WriteLog("CloudClean: Exit 0.")
   
   ' No tracing after this
   set objShell = Nothing
   set filesys = Nothing
   wscript.Quit 0

