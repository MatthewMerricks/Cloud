<!--
//
//  WindowInvisible.xaml
//  Cloud Windows
//
//  Created by BobS.
//  Copyright (c) Cloud.com. All rights reserved.<ResourceDictionary
-->

<Window x:Class="win_client.Views.WindowInvisibleView" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:tb="clr-namespace:Hardcodet.Wpf.TaskbarNotification;assembly=Hardcodet.Wpf.TaskbarNotification"
    xmlns:local="clr-namespace:win_client.Services.Notification"
    DataContext="{Binding WindowInvisibleViewModel, Source={StaticResource Locator}}" 
    mc:Ignorable="d" d:DesignWidth="624" d:DesignHeight="442"
    Width="0" Height="0"
      >

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/win-client;component/Skins/MainSkin.xaml" />
                <ResourceDictionary Source="/win-client;component/Skins/NotifyIconResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="tb:TaskbarIcon.TrayToolTipOpen" SourceName="tb" />
    </Window.Triggers>

    <!-- <Grid x:Name="LayoutRoot" Visibility="Collapsed"> -->
    <Grid x:Name="LayoutRoot">
        <!--
      THE TASKBARICON ELEMENT WAS DECLARED INLINE IN ORDER TO USE DATABINDING
      FOR ITS PROPERTIES. IN  A REAL-LIFE APP, YOU'D PROBABLY RATHER DECLARE
      IT IN A RESOURCE DICTIONARY SO YOU CAN ALSO USE IT IF THERE IS NO WINDOW
      OPEN.
    -->

      <tb:TaskbarIcon
        x:Name="tb"
        VerticalAlignment="Top"
        IconSource="/Artwork/cloud.ico"
        ToolTipText="Hello Cloud!"
        ContextMenu="{StaticResource tbMenu}"
        Visibility="{Binding TaskbarIconVisibility, Mode=TwoWay}"
        MenuActivation="RightClick"
        PopupActivation="LeftClick"
        DoubleClickCommand="{Binding ShowPreferencesPageCommand, Mode=OneTime}"
        DoubleClickCommandParameter="{Binding RelativeSource={RelativeSource Self}}"
        >

        <tb:TaskbarIcon.TrayPopup>
                <!-- the control will be put into a popup with an explicit DataContext -->
                <local:FancyPopup />
        </tb:TaskbarIcon.TrayPopup>

        <tb:TaskbarIcon.TrayToolTip>
            <!-- the control will be put into a tooltip with an explicit DataContext -->
            <local:FancyToolTip Opacity="0.85" InfoText="{Binding Path=ToolTipText}" />
        </tb:TaskbarIcon.TrayToolTip>

        </tb:TaskbarIcon>
    </Grid>
</Window>
