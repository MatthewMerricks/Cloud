//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SQLIndexer", "FK_EnumCategoryId_EnumCategoryId", "EnumCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLIndexer.EnumCategory), "Enums", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLIndexer.SQLEnum), true)]
[assembly: EdmRelationshipAttribute("SQLIndexer", "FK_FileChangeTypeEnumId_FileChangeTypeCategoryId_EnumId_EnumCategoryId", "Enums", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLIndexer.SQLEnum), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLIndexer.Event), true)]
[assembly: EdmRelationshipAttribute("SQLIndexer", "FK_FileSystemObjectId_FileSystemObjectId", "FileSystemObjects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLIndexer.FileSystemObject), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLIndexer.Event), true)]
[assembly: EdmRelationshipAttribute("SQLIndexer", "FK_SyncCounter_SyncCounter", "Syncs", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SQLIndexer.Sync), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLIndexer.Event), true)]
[assembly: EdmRelationshipAttribute("SQLIndexer", "FK_SyncStates_FileSystemObjectId_FileSystemObjectId", "FileSystemObjects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLIndexer.FileSystemObject), "SyncStates", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLIndexer.SyncState), true)]
[assembly: EdmRelationshipAttribute("SQLIndexer", "FK_SyncStates_ServerLinkedFileSystemObjectId_FileSystemObjectId", "FileSystemObjects", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SQLIndexer.FileSystemObject), "SyncStates", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLIndexer.SyncState), true)]
[assembly: EdmRelationshipAttribute("SQLIndexer", "FK_SyncStates_SyncCounter_SyncCounter", "Syncs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLIndexer.Sync), "SyncStates", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLIndexer.SyncState), true)]

#endregion

namespace SQLIndexer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class IndexDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new IndexDBEntities object using the connection string found in the 'IndexDBEntities' section of the application configuration file.
        /// </summary>
        public IndexDBEntities() : base("name=IndexDBEntities", "IndexDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IndexDBEntities object.
        /// </summary>
        public IndexDBEntities(string connectionString) : base(connectionString, "IndexDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IndexDBEntities object.
        /// </summary>
        public IndexDBEntities(EntityConnection connection) : base(connection, "IndexDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EnumCategory> EnumCategories
        {
            get
            {
                if ((_EnumCategories == null))
                {
                    _EnumCategories = base.CreateObjectSet<EnumCategory>("EnumCategories");
                }
                return _EnumCategories;
            }
        }
        private ObjectSet<EnumCategory> _EnumCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SQLEnum> SQLEnums
        {
            get
            {
                if ((_SQLEnums == null))
                {
                    _SQLEnums = base.CreateObjectSet<SQLEnum>("SQLEnums");
                }
                return _SQLEnums;
            }
        }
        private ObjectSet<SQLEnum> _SQLEnums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileSystemObject> FileSystemObjects
        {
            get
            {
                if ((_FileSystemObjects == null))
                {
                    _FileSystemObjects = base.CreateObjectSet<FileSystemObject>("FileSystemObjects");
                }
                return _FileSystemObjects;
            }
        }
        private ObjectSet<FileSystemObject> _FileSystemObjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sync> Syncs
        {
            get
            {
                if ((_Syncs == null))
                {
                    _Syncs = base.CreateObjectSet<Sync>("Syncs");
                }
                return _Syncs;
            }
        }
        private ObjectSet<Sync> _Syncs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SyncState> SyncStates
        {
            get
            {
                if ((_SyncStates == null))
                {
                    _SyncStates = base.CreateObjectSet<SyncState>("SyncStates");
                }
                return _SyncStates;
            }
        }
        private ObjectSet<SyncState> _SyncStates;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EnumCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnumCategories(EnumCategory enumCategory)
        {
            base.AddObject("EnumCategories", enumCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SQLEnums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSQLEnums(SQLEnum sQLEnum)
        {
            base.AddObject("SQLEnums", sQLEnum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileSystemObjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileSystemObjects(FileSystemObject fileSystemObject)
        {
            base.AddObject("FileSystemObjects", fileSystemObject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Syncs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSyncs(Sync sync)
        {
            base.AddObject("Syncs", sync);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SyncStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSyncStates(SyncState syncState)
        {
            base.AddObject("SyncStates", syncState);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQLIndexer", Name="EnumCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EnumCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EnumCategory object.
        /// </summary>
        /// <param name="enumCategoryId">Initial value of the EnumCategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EnumCategory CreateEnumCategory(global::System.Int32 enumCategoryId, global::System.String name)
        {
            EnumCategory enumCategory = new EnumCategory();
            enumCategory.EnumCategoryId = enumCategoryId;
            enumCategory.Name = name;
            return enumCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnumCategoryId
        {
            get
            {
                return _EnumCategoryId;
            }
            set
            {
                if (_EnumCategoryId != value)
                {
                    OnEnumCategoryIdChanging(value);
                    ReportPropertyChanging("EnumCategoryId");
                    _EnumCategoryId = StructuralObject.SetValidValue(value, "EnumCategoryId");
                    ReportPropertyChanged("EnumCategoryId");
                    OnEnumCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _EnumCategoryId;
        partial void OnEnumCategoryIdChanging(global::System.Int32 value);
        partial void OnEnumCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_EnumCategoryId_EnumCategoryId", "Enums")]
        public EntityCollection<SQLEnum> Enums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SQLEnum>("SQLIndexer.FK_EnumCategoryId_EnumCategoryId", "Enums");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SQLEnum>("SQLIndexer.FK_EnumCategoryId_EnumCategoryId", "Enums", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQLIndexer", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="fileChangeTypeCategoryId">Initial value of the FileChangeTypeCategoryId property.</param>
        /// <param name="fileChangeTypeEnumId">Initial value of the FileChangeTypeEnumId property.</param>
        /// <param name="fileSystemObjectId">Initial value of the FileSystemObjectId property.</param>
        /// <param name="syncFrom">Initial value of the SyncFrom property.</param>
        public static Event CreateEvent(global::System.Int32 eventId, global::System.Int32 fileChangeTypeCategoryId, global::System.Int32 fileChangeTypeEnumId, global::System.Int32 fileSystemObjectId, global::System.Boolean syncFrom)
        {
            Event @event = new Event();
            @event.EventId = eventId;
            @event.FileChangeTypeCategoryId = fileChangeTypeCategoryId;
            @event.FileChangeTypeEnumId = fileChangeTypeEnumId;
            @event.FileSystemObjectId = fileSystemObjectId;
            @event.SyncFrom = syncFrom;
            return @event;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value, "EventId");
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SyncCounter
        {
            get
            {
                return _SyncCounter;
            }
            set
            {
                OnSyncCounterChanging(value);
                ReportPropertyChanging("SyncCounter");
                _SyncCounter = StructuralObject.SetValidValue(value, "SyncCounter");
                ReportPropertyChanged("SyncCounter");
                OnSyncCounterChanged();
            }
        }
        private Nullable<global::System.Int32> _SyncCounter;
        partial void OnSyncCounterChanging(Nullable<global::System.Int32> value);
        partial void OnSyncCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileChangeTypeCategoryId
        {
            get
            {
                return _FileChangeTypeCategoryId;
            }
            set
            {
                OnFileChangeTypeCategoryIdChanging(value);
                ReportPropertyChanging("FileChangeTypeCategoryId");
                _FileChangeTypeCategoryId = StructuralObject.SetValidValue(value, "FileChangeTypeCategoryId");
                ReportPropertyChanged("FileChangeTypeCategoryId");
                OnFileChangeTypeCategoryIdChanged();
            }
        }
        private global::System.Int32 _FileChangeTypeCategoryId;
        partial void OnFileChangeTypeCategoryIdChanging(global::System.Int32 value);
        partial void OnFileChangeTypeCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileChangeTypeEnumId
        {
            get
            {
                return _FileChangeTypeEnumId;
            }
            set
            {
                OnFileChangeTypeEnumIdChanging(value);
                ReportPropertyChanging("FileChangeTypeEnumId");
                _FileChangeTypeEnumId = StructuralObject.SetValidValue(value, "FileChangeTypeEnumId");
                ReportPropertyChanged("FileChangeTypeEnumId");
                OnFileChangeTypeEnumIdChanged();
            }
        }
        private global::System.Int32 _FileChangeTypeEnumId;
        partial void OnFileChangeTypeEnumIdChanging(global::System.Int32 value);
        partial void OnFileChangeTypeEnumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousPath
        {
            get
            {
                return _PreviousPath;
            }
            set
            {
                OnPreviousPathChanging(value);
                ReportPropertyChanging("PreviousPath");
                _PreviousPath = StructuralObject.SetValidValue(value, true, "PreviousPath");
                ReportPropertyChanged("PreviousPath");
                OnPreviousPathChanged();
            }
        }
        private global::System.String _PreviousPath;
        partial void OnPreviousPathChanging(global::System.String value);
        partial void OnPreviousPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileSystemObjectId
        {
            get
            {
                return _FileSystemObjectId;
            }
            set
            {
                OnFileSystemObjectIdChanging(value);
                ReportPropertyChanging("FileSystemObjectId");
                _FileSystemObjectId = StructuralObject.SetValidValue(value, "FileSystemObjectId");
                ReportPropertyChanged("FileSystemObjectId");
                OnFileSystemObjectIdChanged();
            }
        }
        private global::System.Int32 _FileSystemObjectId;
        partial void OnFileSystemObjectIdChanging(global::System.Int32 value);
        partial void OnFileSystemObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SyncFrom
        {
            get
            {
                return _SyncFrom;
            }
            set
            {
                OnSyncFromChanging(value);
                ReportPropertyChanging("SyncFrom");
                _SyncFrom = StructuralObject.SetValidValue(value, "SyncFrom");
                ReportPropertyChanged("SyncFrom");
                OnSyncFromChanged();
            }
        }
        private global::System.Boolean _SyncFrom;
        partial void OnSyncFromChanging(global::System.Boolean value);
        partial void OnSyncFromChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_FileChangeTypeEnumId_FileChangeTypeCategoryId_EnumId_EnumCategoryId", "Enums")]
        public SQLEnum Enum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SQLEnum>("SQLIndexer.FK_FileChangeTypeEnumId_FileChangeTypeCategoryId_EnumId_EnumCategoryId", "Enums").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SQLEnum>("SQLIndexer.FK_FileChangeTypeEnumId_FileChangeTypeCategoryId_EnumId_EnumCategoryId", "Enums").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SQLEnum> EnumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SQLEnum>("SQLIndexer.FK_FileChangeTypeEnumId_FileChangeTypeCategoryId_EnumId_EnumCategoryId", "Enums");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SQLEnum>("SQLIndexer.FK_FileChangeTypeEnumId_FileChangeTypeCategoryId_EnumId_EnumCategoryId", "Enums", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_FileSystemObjectId_FileSystemObjectId", "FileSystemObjects")]
        public FileSystemObject FileSystemObject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileSystemObject>("SQLIndexer.FK_FileSystemObjectId_FileSystemObjectId", "FileSystemObjects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileSystemObject>("SQLIndexer.FK_FileSystemObjectId_FileSystemObjectId", "FileSystemObjects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileSystemObject> FileSystemObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileSystemObject>("SQLIndexer.FK_FileSystemObjectId_FileSystemObjectId", "FileSystemObjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileSystemObject>("SQLIndexer.FK_FileSystemObjectId_FileSystemObjectId", "FileSystemObjects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_SyncCounter_SyncCounter", "Syncs")]
        public Sync Sync
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sync>("SQLIndexer.FK_SyncCounter_SyncCounter", "Syncs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sync>("SQLIndexer.FK_SyncCounter_SyncCounter", "Syncs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sync> SyncReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sync>("SQLIndexer.FK_SyncCounter_SyncCounter", "Syncs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sync>("SQLIndexer.FK_SyncCounter_SyncCounter", "Syncs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQLIndexer", Name="FileSystemObject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileSystemObject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileSystemObject object.
        /// </summary>
        /// <param name="fileSystemObjectId">Initial value of the FileSystemObjectId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="isFolder">Initial value of the IsFolder property.</param>
        public static FileSystemObject CreateFileSystemObject(global::System.Int32 fileSystemObjectId, global::System.String path, global::System.Boolean isFolder)
        {
            FileSystemObject fileSystemObject = new FileSystemObject();
            fileSystemObject.FileSystemObjectId = fileSystemObjectId;
            fileSystemObject.Path = path;
            fileSystemObject.IsFolder = isFolder;
            return fileSystemObject;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileSystemObjectId
        {
            get
            {
                return _FileSystemObjectId;
            }
            set
            {
                if (_FileSystemObjectId != value)
                {
                    OnFileSystemObjectIdChanging(value);
                    ReportPropertyChanging("FileSystemObjectId");
                    _FileSystemObjectId = StructuralObject.SetValidValue(value, "FileSystemObjectId");
                    ReportPropertyChanged("FileSystemObjectId");
                    OnFileSystemObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _FileSystemObjectId;
        partial void OnFileSystemObjectIdChanging(global::System.Int32 value);
        partial void OnFileSystemObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false, "Path");
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastTime
        {
            get
            {
                return _LastTime;
            }
            set
            {
                OnLastTimeChanging(value);
                ReportPropertyChanging("LastTime");
                _LastTime = StructuralObject.SetValidValue(value, "LastTime");
                ReportPropertyChanged("LastTime");
                OnLastTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastTime;
        partial void OnLastTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationTime
        {
            get
            {
                return _CreationTime;
            }
            set
            {
                OnCreationTimeChanging(value);
                ReportPropertyChanging("CreationTime");
                _CreationTime = StructuralObject.SetValidValue(value, "CreationTime");
                ReportPropertyChanged("CreationTime");
                OnCreationTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationTime;
        partial void OnCreationTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFolder
        {
            get
            {
                return _IsFolder;
            }
            set
            {
                OnIsFolderChanging(value);
                ReportPropertyChanging("IsFolder");
                _IsFolder = StructuralObject.SetValidValue(value, "IsFolder");
                ReportPropertyChanged("IsFolder");
                OnIsFolderChanged();
            }
        }
        private global::System.Boolean _IsFolder;
        partial void OnIsFolderChanging(global::System.Boolean value);
        partial void OnIsFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, "Size");
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private Nullable<global::System.Int64> _Size;
        partial void OnSizeChanging(Nullable<global::System.Int64> value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PathChecksum
        {
            get
            {
                return _PathChecksum;
            }
            set
            {
                OnPathChecksumChanging(value);
                ReportPropertyChanging("PathChecksum");
                _PathChecksum = StructuralObject.SetValidValue(value, "PathChecksum");
                ReportPropertyChanged("PathChecksum");
                OnPathChecksumChanged();
            }
        }
        private Nullable<global::System.Int32> _PathChecksum;
        partial void OnPathChecksumChanging(Nullable<global::System.Int32> value);
        partial void OnPathChecksumChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_FileSystemObjectId_FileSystemObjectId", "Events")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("SQLIndexer.FK_FileSystemObjectId_FileSystemObjectId", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("SQLIndexer.FK_FileSystemObjectId_FileSystemObjectId", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_SyncStates_FileSystemObjectId_FileSystemObjectId", "SyncStates")]
        public EntityCollection<SyncState> SyncStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SyncState>("SQLIndexer.FK_SyncStates_FileSystemObjectId_FileSystemObjectId", "SyncStates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SyncState>("SQLIndexer.FK_SyncStates_FileSystemObjectId_FileSystemObjectId", "SyncStates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_SyncStates_ServerLinkedFileSystemObjectId_FileSystemObjectId", "SyncStates")]
        public EntityCollection<SyncState> ServerLinkedSyncStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SyncState>("SQLIndexer.FK_SyncStates_ServerLinkedFileSystemObjectId_FileSystemObjectId", "SyncStates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SyncState>("SQLIndexer.FK_SyncStates_ServerLinkedFileSystemObjectId_FileSystemObjectId", "SyncStates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQLIndexer", Name="SQLEnum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SQLEnum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SQLEnum object.
        /// </summary>
        /// <param name="enumId">Initial value of the EnumId property.</param>
        /// <param name="enumCategoryId">Initial value of the EnumCategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SQLEnum CreateSQLEnum(global::System.Int32 enumId, global::System.Int32 enumCategoryId, global::System.String name)
        {
            SQLEnum sQLEnum = new SQLEnum();
            sQLEnum.EnumId = enumId;
            sQLEnum.EnumCategoryId = enumCategoryId;
            sQLEnum.Name = name;
            return sQLEnum;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnumId
        {
            get
            {
                return _EnumId;
            }
            set
            {
                if (_EnumId != value)
                {
                    OnEnumIdChanging(value);
                    ReportPropertyChanging("EnumId");
                    _EnumId = StructuralObject.SetValidValue(value, "EnumId");
                    ReportPropertyChanged("EnumId");
                    OnEnumIdChanged();
                }
            }
        }
        private global::System.Int32 _EnumId;
        partial void OnEnumIdChanging(global::System.Int32 value);
        partial void OnEnumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnumCategoryId
        {
            get
            {
                return _EnumCategoryId;
            }
            set
            {
                if (_EnumCategoryId != value)
                {
                    OnEnumCategoryIdChanging(value);
                    ReportPropertyChanging("EnumCategoryId");
                    _EnumCategoryId = StructuralObject.SetValidValue(value, "EnumCategoryId");
                    ReportPropertyChanged("EnumCategoryId");
                    OnEnumCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _EnumCategoryId;
        partial void OnEnumCategoryIdChanging(global::System.Int32 value);
        partial void OnEnumCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_EnumCategoryId_EnumCategoryId", "EnumCategories")]
        public EnumCategory EnumCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EnumCategory>("SQLIndexer.FK_EnumCategoryId_EnumCategoryId", "EnumCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EnumCategory>("SQLIndexer.FK_EnumCategoryId_EnumCategoryId", "EnumCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EnumCategory> EnumCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EnumCategory>("SQLIndexer.FK_EnumCategoryId_EnumCategoryId", "EnumCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EnumCategory>("SQLIndexer.FK_EnumCategoryId_EnumCategoryId", "EnumCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_FileChangeTypeEnumId_FileChangeTypeCategoryId_EnumId_EnumCategoryId", "Events")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("SQLIndexer.FK_FileChangeTypeEnumId_FileChangeTypeCategoryId_EnumId_EnumCategoryId", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("SQLIndexer.FK_FileChangeTypeEnumId_FileChangeTypeCategoryId_EnumId_EnumCategoryId", "Events", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQLIndexer", Name="Sync")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sync : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sync object.
        /// </summary>
        /// <param name="syncId">Initial value of the SyncId property.</param>
        /// <param name="syncCounter">Initial value of the SyncCounter property.</param>
        /// <param name="rootPath">Initial value of the RootPath property.</param>
        public static Sync CreateSync(global::System.String syncId, global::System.Int32 syncCounter, global::System.String rootPath)
        {
            Sync sync = new Sync();
            sync.SyncId = syncId;
            sync.SyncCounter = syncCounter;
            sync.RootPath = rootPath;
            return sync;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SyncId
        {
            get
            {
                return _SyncId;
            }
            set
            {
                OnSyncIdChanging(value);
                ReportPropertyChanging("SyncId");
                _SyncId = StructuralObject.SetValidValue(value, false, "SyncId");
                ReportPropertyChanged("SyncId");
                OnSyncIdChanged();
            }
        }
        private global::System.String _SyncId;
        partial void OnSyncIdChanging(global::System.String value);
        partial void OnSyncIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SyncCounter
        {
            get
            {
                return _SyncCounter;
            }
            set
            {
                if (_SyncCounter != value)
                {
                    OnSyncCounterChanging(value);
                    ReportPropertyChanging("SyncCounter");
                    _SyncCounter = StructuralObject.SetValidValue(value, "SyncCounter");
                    ReportPropertyChanged("SyncCounter");
                    OnSyncCounterChanged();
                }
            }
        }
        private global::System.Int32 _SyncCounter;
        partial void OnSyncCounterChanging(global::System.Int32 value);
        partial void OnSyncCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RootPath
        {
            get
            {
                return _RootPath;
            }
            set
            {
                OnRootPathChanging(value);
                ReportPropertyChanging("RootPath");
                _RootPath = StructuralObject.SetValidValue(value, false, "RootPath");
                ReportPropertyChanged("RootPath");
                OnRootPathChanged();
            }
        }
        private global::System.String _RootPath;
        partial void OnRootPathChanging(global::System.String value);
        partial void OnRootPathChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_SyncCounter_SyncCounter", "Events")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("SQLIndexer.FK_SyncCounter_SyncCounter", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("SQLIndexer.FK_SyncCounter_SyncCounter", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_SyncStates_SyncCounter_SyncCounter", "SyncStates")]
        public EntityCollection<SyncState> SyncStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SyncState>("SQLIndexer.FK_SyncStates_SyncCounter_SyncCounter", "SyncStates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SyncState>("SQLIndexer.FK_SyncStates_SyncCounter_SyncCounter", "SyncStates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQLIndexer", Name="SyncState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SyncState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SyncState object.
        /// </summary>
        /// <param name="syncStateId">Initial value of the SyncStateId property.</param>
        /// <param name="syncCounter">Initial value of the SyncCounter property.</param>
        /// <param name="fileSystemObjectId">Initial value of the FileSystemObjectId property.</param>
        public static SyncState CreateSyncState(global::System.Int32 syncStateId, global::System.Int32 syncCounter, global::System.Int32 fileSystemObjectId)
        {
            SyncState syncState = new SyncState();
            syncState.SyncStateId = syncStateId;
            syncState.SyncCounter = syncCounter;
            syncState.FileSystemObjectId = fileSystemObjectId;
            return syncState;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SyncStateId
        {
            get
            {
                return _SyncStateId;
            }
            set
            {
                if (_SyncStateId != value)
                {
                    OnSyncStateIdChanging(value);
                    ReportPropertyChanging("SyncStateId");
                    _SyncStateId = StructuralObject.SetValidValue(value, "SyncStateId");
                    ReportPropertyChanged("SyncStateId");
                    OnSyncStateIdChanged();
                }
            }
        }
        private global::System.Int32 _SyncStateId;
        partial void OnSyncStateIdChanging(global::System.Int32 value);
        partial void OnSyncStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SyncCounter
        {
            get
            {
                return _SyncCounter;
            }
            set
            {
                OnSyncCounterChanging(value);
                ReportPropertyChanging("SyncCounter");
                _SyncCounter = StructuralObject.SetValidValue(value, "SyncCounter");
                ReportPropertyChanged("SyncCounter");
                OnSyncCounterChanged();
            }
        }
        private global::System.Int32 _SyncCounter;
        partial void OnSyncCounterChanging(global::System.Int32 value);
        partial void OnSyncCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileSystemObjectId
        {
            get
            {
                return _FileSystemObjectId;
            }
            set
            {
                OnFileSystemObjectIdChanging(value);
                ReportPropertyChanging("FileSystemObjectId");
                _FileSystemObjectId = StructuralObject.SetValidValue(value, "FileSystemObjectId");
                ReportPropertyChanged("FileSystemObjectId");
                OnFileSystemObjectIdChanged();
            }
        }
        private global::System.Int32 _FileSystemObjectId;
        partial void OnFileSystemObjectIdChanging(global::System.Int32 value);
        partial void OnFileSystemObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServerLinkedFileSystemObjectId
        {
            get
            {
                return _ServerLinkedFileSystemObjectId;
            }
            set
            {
                OnServerLinkedFileSystemObjectIdChanging(value);
                ReportPropertyChanging("ServerLinkedFileSystemObjectId");
                _ServerLinkedFileSystemObjectId = StructuralObject.SetValidValue(value, "ServerLinkedFileSystemObjectId");
                ReportPropertyChanged("ServerLinkedFileSystemObjectId");
                OnServerLinkedFileSystemObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ServerLinkedFileSystemObjectId;
        partial void OnServerLinkedFileSystemObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnServerLinkedFileSystemObjectIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_SyncStates_FileSystemObjectId_FileSystemObjectId", "FileSystemObjects")]
        public FileSystemObject FileSystemObject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileSystemObject>("SQLIndexer.FK_SyncStates_FileSystemObjectId_FileSystemObjectId", "FileSystemObjects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileSystemObject>("SQLIndexer.FK_SyncStates_FileSystemObjectId_FileSystemObjectId", "FileSystemObjects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileSystemObject> FileSystemObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileSystemObject>("SQLIndexer.FK_SyncStates_FileSystemObjectId_FileSystemObjectId", "FileSystemObjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileSystemObject>("SQLIndexer.FK_SyncStates_FileSystemObjectId_FileSystemObjectId", "FileSystemObjects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_SyncStates_ServerLinkedFileSystemObjectId_FileSystemObjectId", "FileSystemObjects")]
        public FileSystemObject ServerLinkedFileSystemObject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileSystemObject>("SQLIndexer.FK_SyncStates_ServerLinkedFileSystemObjectId_FileSystemObjectId", "FileSystemObjects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileSystemObject>("SQLIndexer.FK_SyncStates_ServerLinkedFileSystemObjectId_FileSystemObjectId", "FileSystemObjects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileSystemObject> ServerLinkedFileSystemObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileSystemObject>("SQLIndexer.FK_SyncStates_ServerLinkedFileSystemObjectId_FileSystemObjectId", "FileSystemObjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileSystemObject>("SQLIndexer.FK_SyncStates_ServerLinkedFileSystemObjectId_FileSystemObjectId", "FileSystemObjects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLIndexer", "FK_SyncStates_SyncCounter_SyncCounter", "Syncs")]
        public Sync Sync
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sync>("SQLIndexer.FK_SyncStates_SyncCounter_SyncCounter", "Syncs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sync>("SQLIndexer.FK_SyncStates_SyncCounter_SyncCounter", "Syncs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sync> SyncReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sync>("SQLIndexer.FK_SyncStates_SyncCounter_SyncCounter", "Syncs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sync>("SQLIndexer.FK_SyncStates_SyncCounter_SyncCounter", "Syncs", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
