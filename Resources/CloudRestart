   '
   '  CloudRestart.vbs
   '  Cloud Windows
   '
   '  Created by BobS.
   '  Copyright (c) Cloud.com. All rights reserved.
   '

   ' Parameter: None
   ' Call as "C:\Windows\SysWOW64\cscript.exe" //B //T:5 //Nologo "<path to this CloudRestart.vbs file>"
   
   Option Explicit

   Const ForReading = 1
   Const ForWriting = 2
   Const ForAppending = 8
   Const DeleteReadOnly = true
   
   Dim objFileSys
   Dim objShell
 
   ' Global variables
   Dim shouldTrace
   Dim shouldCloudBeStarted
   Dim sExplorerPath
   Dim logFileFullPath
   Dim sScriptFile
   Dim programFilesX86Path
   Dim windowsPath
   Dim sApplicationDataLocalFolderPath
   
   Set objFileSys = wscript.CreateObject("Scripting.FileSystemObject") 
   Set objShell = wscript.createObject("wscript.shell") 
 
   shouldTrace = True
   shouldCloudBeStarted = True

   ' Pad a number with leading zeros
   Function PadDigits(n, totalDigits) 
       PadDigits = Right(string(totalDigits,"0") & n, totalDigits) 
   End Function 
    
   sApplicationDataLocalFolderPath = objShell.ExpandEnvironmentStrings("%LOCALAPPDATA%")
   Dim currentYear
   Dim currentMonth
   Dim currentDay
   currentYear = Year(Date)
   currentMonth = PadDigits(Month(Date), 2)
   currentDay = PadDigits(Day(Date), 2)
   logFileFullPath = sApplicationDataLocalFolderPath & "\Cloud\Trace-" & currentYear & "-" & PadDigits(currentMonth, 2) & "-" & PadDigits(currentDay, 2) & "-" & "CloudVbs.log"

   windowsPath = objShell.ExpandEnvironmentStrings("%windir%")
   
    ' Trace function
    Sub WriteLog(LogMessage)
        If shouldTrace Then
            ' Write to DbgView
            wscript.echo Now() & ": " & LogMessage

            On Error Resume Next 

            fFinished = False
            Do
                Dim objLogFile
                Dim fFinished

                ' Try to open the log file
                Set objLogFile = filesys.OpenTextFile(logFileFullPath, ForAppending, TRUE)
                If Err.Number = 70 Then
                    ' The file is locked
                    wscript.Sleep 50
                ElseIf Err.Number <> 0 then
                    wscript.Echo  "PinToTaskbar: WriteLog: Unexpected Error #: " & Err.Number
                    fFinished = True
                Else
                    ' The file opened.  Write to it.
                    fFinished = True
                    objLogFile.Writeline(Now() & ": " & LogMessage)
                    objLogFile.Close
                    set objLogFile = Nothing
                End If
                Err.Clear
            Loop until fFinished

            On Error GoTo 0
        End If
    End Sub

   ' Check to see if Explorer is running   
   Function IsProcessRunning(processPath, processFileNameExt)
      IsProcessRunning = False
      Dim colProcesses
      Dim refProcess
      Dim objWMIService

      WriteLog "CloudRestart: IsProcessRunning: Entry. processPath: " & processPath
      Set objWMIService = GetObject("winmgmts:\\.\root\CIMV2") 
      Set colProcesses = objWMIService.ExecQuery( "SELECT * FROM Win32_Process")

      WriteLog "CloudRestart: IsProcessRunning: Loop through executing processes."
      For Each refProcess In colProcesses
         WriteLog "CloudRestart: IsProcessRunning: Process name <" & refProcess.Name & ">, ExecutablePath <" & refProcess.ExecutablePath & ">."
         If UCase(refProcess.ExecutablePath) = UCase(processPath & "\" & processFileNameExt) And UCase(refProcess.Name) = UCase(processFileNameExt) Then
            WriteLog "CloudRestart: IsProcessRunning: The process " & processFileNameExt & " is running."
            IsProcessRunning = True
            Exit For
         End If
      Next
      WriteLog "CloudRestart: IsProcessRunning: Exit rc: " & IsProcessRunning
   End Function

   ' From http://csi-windows.com/toolkit/csi-getosbits
   Function CSI_GetOSBits() 
      CSI_GetOSBits = GetObject("winmgmts:root\cimv2:Win32_Processor='cpu0'").AddressWidth 
   End Function

   '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  MAIN PROGRAM @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
   ' This process is launched by Cloud to restart after changing something fundamental.  e.g., Unlinking.  It will:
   '   o Wait for Cloud.exe to exit.  Kill it if it takes too long.
   '   o Re-launch Cloud.exe
   '
   ' Try pattern
   Class CloudRestart
      Private Sub Class_Initialize
         WriteLog("CloudRestart: Constructor entry.")

         Dim index
         Dim index2

         ' Determine the program files directory to use
         WriteLog("CloudRestart: OS Platform: " & CSI_GetOsBits() & "-bits.")
         if CSI_GetOsBits() = "32" then
             programFilesX86Path = objShell.ExpandEnvironmentStrings("%PROGRAMFILES%")
             if programFilesX86Path = "%PROGRAMFILES%" then
                 WriteLog("CloudRestart: Main: ERROR: Please set environment variable %PROGRAMFILES%.")
                 Exit Sub
             end if
         else
             programFilesX86Path = objShell.ExpandEnvironmentStrings("%PROGRAMFILES(X86)%")
             if programFilesX86Path = "%PROGRAMFILES(X86)%" then
                 WriteLog("CloudRestart: Main: ERROR: Please set environment variable %PROGRAMFILES(X86)%.")
                 Exit Sub
             end if
         end if
         WriteLog("CloudRestart: Main: programFilesX86Path: " & programFilesX86Path)
         WriteLog("CloudRestart: Main: windowsPath: " & windowsPath)

         ' Wait for Cloud.exe to exit.  Don't wait too long.
         index = 0
         WriteLog("CloudRestart: Main: Wait for Cloud to exit.")
         Do While IsProcessRunning(programFilesX86Path & "\Cloud.com\Cloud", "Cloud.exe")
             wscript.Sleep 500
             index = index + 1
             if index > 10 then			' 5 seconds
                 WriteLog "CloudRestart: ERROR: Cloud did not exit.  Timed out.  Kill it now."
                 objShell.Run "taskkill /f /im cloud.exe", 0, true

                 ' Wait for Cloud to exit
                 WriteLog "CloudRestart: Wait for Cloud to exit."
                 index2 = 0
                 Do While IsProcessRunning(programFilesX86Path & "\Cloud.com\Cloud", "cloud.exe")
                     Wscript.Sleep 500
                     index2 = index2 + 1
                     if index2 > 10 then			' 5 seconds
                         WriteLog "CloudRestart: ERROR: Cloud did not exit after killing it.  Timed out."
                         shouldCloudBeStarted = False
                         Exit Do
                      end if
                 Loop
                 Exit Do
             end if
         Loop
         WriteLog "CloudRestart: After wait for Cloud to exit."

         ' Don't restart Cloud if Explorer is not running.  Cloud depends on Explorer.
         WriteLog "CloudRestart: Check for Explorer."
         if NOT IsProcessRunning(windowsPath, "explorer.exe") Then
             WriteLog "CloudRestart: Explorer is running.  Don't start Cloud."
             shouldCloudBeStarted = False
         End If

         ' Launch Cloud.exe again if we should.
         if shouldCloudBeStarted then
             WriteLog "CloudRestart: Launch Cloud.exe."
             objShell.Run """" & programFilesX86Path & "\Cloud.com\Cloud\Cloud.exe""", 1, false
             shouldCloudBeStarted = False
         end if

         WriteLog "CloudRestart: Exit normally"
      End Sub : Private Sub CatchErr : If Err.Number = 0 Then Exit Sub
          ' Catch
          WriteLog("CloudRestart: Unhandled error " & Err.Number & " occurred.")
      Err.Clear : End Sub : Private Sub Class_Terminate : CatchErr
          ' Finally
          WriteLog("CloudRestart: Exiting constructor (finally).")

          ' Restart Cloud.exe if we should
          if shouldCloudBeStarted Then
              WriteLog "CloudRestart: Launch Cloud.exe."
              objShell.Run """" & programFilesX86Path & "\Cloud.com\Cloud\Cloud.exe""", 1, false
             shouldCloudBeStarted = False
          End If

          ' Delete ourselves.  This is possible because VBS runs everything out of memory.
          sScriptFile = Wscript.ScriptFullName
          WriteLog "CloudRestart: CloudRestart.vbs full path: " & sScriptFIle
          objFileSys.DeleteFile sScriptFile, True
      End Sub 
   End Class
   
   ' Drive the main program
   WriteLog("CloudRestart: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@")
   WriteLog("CloudRestart: Drive the main program.")
   With New CloudRestart : End With
   WriteLog("CloudRestart: Exit 0.")
   
   ' No tracing after this
   set objShell = Nothing
   set objFileSys = Nothing
   wscript.Quit 0


