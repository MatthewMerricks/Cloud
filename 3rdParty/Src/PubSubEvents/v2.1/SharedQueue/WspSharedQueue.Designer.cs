//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WspSharedQueue {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class WspSharedQueue {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal WspSharedQueue() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WspSharedQueue.WspSharedQueue", typeof(WspSharedQueue).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enqueue timed out.
        /// </summary>
        internal static string EnqueueTimeout {
            get {
                return ResourceManager.GetString("EnqueueTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid argument value.
        /// </summary>
        internal static string InvalidArgumentValue {
            get {
                return ResourceManager.GetString("InvalidArgumentValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum value is .
        /// </summary>
        internal static string MaxValue {
            get {
                return ResourceManager.GetString("MaxValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum value is 1000.
        /// </summary>
        internal static string MinValue {
            get {
                return ResourceManager.GetString("MinValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue name does not exist.
        /// </summary>
        internal static string NameDoesNotExist {
            get {
                return ResourceManager.GetString("NameDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must not exceed the queue size.
        /// </summary>
        internal static string NotExceedQueueSize {
            get {
                return ResourceManager.GetString("NotExceedQueueSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue is full.
        /// </summary>
        internal static string QueueFull {
            get {
                return ResourceManager.GetString("QueueFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ) Dequeue failed.
        /// </summary>
        internal static string WrappedDequeueFailed {
            get {
                return ResourceManager.GetString("WrappedDequeueFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ) Enqueue failed.
        /// </summary>
        internal static string WrappedEnqueueFailed {
            get {
                return ResourceManager.GetString("WrappedEnqueueFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (HRESULT:.
        /// </summary>
        internal static string WrappedHresult {
            get {
                return ResourceManager.GetString("WrappedHresult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ) SharedQueue failed to initialize.
        /// </summary>
        internal static string WrappedInitFailure {
            get {
                return ResourceManager.GetString("WrappedInitFailure", resourceCulture);
            }
        }
    }
}
