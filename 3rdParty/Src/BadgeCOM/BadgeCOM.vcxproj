<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Release64|ARM">
      <Configuration>Release64</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release64|Itanium">
      <Configuration>Release64</Configuration>
      <Platform>Itanium</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release64|Win32">
      <Configuration>Release64</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release64|x64">
      <Configuration>Release64</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Itanium">
      <Configuration>Release</Configuration>
      <Platform>Itanium</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{84373324-5261-45D7-AA92-5C4A88C07233}</ProjectGuid>
    <Keyword>AtlProj</Keyword>
    <VCTargetsPath Condition="'$(VCTargetsPath11)' != '' and '$(VSVersion)' == '' and $(VisualStudioVersion) == ''">$(VCTargetsPath11)</VCTargetsPath>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <UseOfAtl>Static</UseOfAtl>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v100</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <UseOfAtl>Dynamic</UseOfAtl>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v100</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Itanium'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <UseOfAtl>Dynamic</UseOfAtl>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release64|Itanium'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <UseOfAtl>Dynamic</UseOfAtl>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <UseOfAtl>Dynamic</UseOfAtl>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v100</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release64|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <UseOfAtl>Static</UseOfAtl>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v100</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Label="Configuration" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release64|ARM'" Label="Configuration">
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Itanium'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release64|Itanium'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release64|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'">
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Itanium'">
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release64|Itanium'">
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release64|x64'">
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>X86;WIN32;_WINDOWS;NDEBUG;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(SolutionDir)..\..\..\3rdParty\src\Boost_1_52</AdditionalIncludeDirectories>
      <ExceptionHandling>Async</ExceptionHandling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Midl>
      <MkTypLibCompatible>false</MkTypLibCompatible>
      <TargetEnvironment>Win32</TargetEnvironment>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <HeaderFileName>BadgeCOM_i.h</HeaderFileName>
      <InterfaceIdentifierFileName>BadgeCOM_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>BadgeCOM_p.c</ProxyFileName>
      <GenerateStublessProxies>true</GenerateStublessProxies>
      <TypeLibraryName>$(IntDir)BadgeCOM.tlb</TypeLibraryName>
      <DllDataFileName>
      </DllDataFileName>
      <ValidateAllParameters>true</ValidateAllParameters>
    </Midl>
    <ResourceCompile>
      <Culture>0x0409</Culture>
      <AdditionalIncludeDirectories>$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ResourceCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <ModuleDefinitionFile>.\BadgeCOM.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <RegisterOutput>false</RegisterOutput>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;version.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)..\..\..\3rdParty\bin\Release\Boost_1_52</AdditionalLibraryDirectories>
      <TypeLibraryFile>$(OutDir)BadgeCom.tlb</TypeLibraryFile>
    </Link>
    <PostBuildEvent>
      <Command>echo ************  START POST BUILD STEP **********************

REM ----------------------------------------------------------------
set ErrorTracker=1
echo copy $(OutDir)$(TargetName).dll $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).dll
copy $(OutDir)$(TargetName).dll $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).dll
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=2

echo if exist findVersionVar.bat (del findVersionVar.bat)
if exist findVersionVar.bat (del findVersionVar.bat)
echo echo set /p versionVar=Enter the 4-part version number and press enter:^&gt;findVersionVar.bat
echo echo.echo %%%%versionVar%%%%^^^&gt;versionVar.txt^&gt;^&gt;findVersionVar.bat
echo set /p versionVar=Enter the 4-part version number and press enter:&gt;findVersionVar.bat &amp;&amp; echo.echo %%versionVar%%^&gt;versionVar.txt&gt;&gt;findVersionVar.bat

echo if exist versionVar.txt (del versionVar.txt)
if exist versionVar.txt (del versionVar.txt)
echo (inside a new command prompt process "set /p versionVar=Enter the 4-part version number and press enter:")
START "Get version number from user" /wait CMD /c call findVersionVar.bat
echo set /p versionVar=^&lt;versionVar.txt
set /p versionVar=&lt;versionVar.txt
echo versionVar is now equal to %versionVar%
echo if exist findVersionVar.bat (del findVersionVar.bat)
if exist findVersionVar.bat (del findVersionVar.bat)
echo if exist versionVar.txt (del versionVar.txt)
if exist versionVar.txt (del versionVar.txt)
echo tlbimp $(OutDir)$(TargetName).dll /delaysign /publickey:C:\CertBackup\CloudSigning\CloudPlatformCodeSigning.pub /out:$(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll /company:Cloud.com /copyright:"Copyright (C ) Cloud.com. All rights reserved." /asmversion:%%versionVar%% /productversion:%%versionVar%%
tlbimp $(OutDir)$(TargetName).dll /delaysign /publickey:C:\CertBackup\CloudSigning\CloudPlatformCodeSigning.pub /out:$(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll /company:Cloud.com /copyright:"Copyright (C ) Cloud.com. All rights reserved." /asmversion:%versionVar% /productversion:%versionVar%
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=3
set SignFailures=0

:SignStart
echo (inside a new command prompt process "START /WAIT CMD /C") sn -R $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll C:\CertBackup\CloudSigning\CloudPlatformCodeSigning.pfx
START "Sign BadgeComLib.dll" /WAIT CMD /C "echo sn -R $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll C:\CertBackup\CloudSigning\CloudPlatformCodeSigning.pfx &amp;&amp; sn -R $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll C:\CertBackup\CloudSigning\CloudPlatformCodeSigning.pfx"
if errorlevel 1 goto SignFailed
goto SignSucceeded

:SignFailed
set /a SignFailures+=1
if %SignFailures%==3 goto BuildEventFailed
echo Signing failed %SignFailures% time(s) out of a total of 3
goto SignStart

:SignSucceeded

REM ----------------------------------------------------------------
set ErrorTracker=4
echo copy $(OutDir)$(TargetName).pdb $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).pdb
copy $(OutDir)$(TargetName).pdb $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).pdb
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=5
echo copy $(OutDir)$(TargetName).tlb $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).tlb
copy $(OutDir)$(TargetName).tlb $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).tlb
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=6
echo regsvr32.exe /u /s $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).dll
regsvr32.exe /u /s $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).dll
REM do not jump to error condition and reset error level since it is fine if regsvr32.exe fails to unregister dll
set errorlevel=0

REM ---- PLACE THIS CODE AT THE END
REM Exit properly because the build will not fail
REM unless the final step exits with an error code
goto BuildEventOK
:BuildEventFailed
echo POSTBUILDSTEP for $(ProjectName) FAILED at step %ErrorTracker%
set ErrorTracker=
echo ************  POST BUILD STEP COMPLETED WITH ERROR **********************
exit 1
:BuildEventOK
echo POSTBUILDSTEP for $(ProjectName) COMPLETED OK
echo ************  POST BUILD STEP COMPLETED OK **********************
</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>echo ************  START PRE BUILD STEPS **********************

if not "$(Configuration)" == "Release" goto NotRelease
  REM This is 32-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=1
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll
  if exist $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=2
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=3
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=4
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  goto AfterConfigurationCheck
:NotRelease
  REM This is 64-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=5
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll
  if exist $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=6
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=7
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=8
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

:AfterConfigurationCheck

REM ---- PLACE THIS CODE AT THE END
REM Exit properly because the build will not fail
REM unless the final step exits with an error code
goto BuildEventOK
:BuildEventFailed
echo errorlevel is %errorlevel%
echo PREBUILDSTEP for $(ProjectName) FAILED at step %ErrorTracker%
set ErrorTracker=
echo ************  PRE BUILD STEP COMPLETED WITH ERROR **********************
exit 1
:BuildEventOK
echo PREBUILDSTEP for $(ProjectName) COMPLETED OK
echo ************  PRE BUILD STEP COMPLETED OK **********************



</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>Async</ExceptionHandling>
      <AdditionalIncludeDirectories>$(SolutionDir)..\..\..\3rdParty\src\Boost_1_52</AdditionalIncludeDirectories>
    </ClCompile>
    <Midl>
      <MkTypLibCompatible>false</MkTypLibCompatible>
      <TargetEnvironment>Win32</TargetEnvironment>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <HeaderFileName>BadgeCOM_i.h</HeaderFileName>
      <InterfaceIdentifierFileName>BadgeCOM_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>BadgeCOM_p.c</ProxyFileName>
      <GenerateStublessProxies>true</GenerateStublessProxies>
      <TypeLibraryName>$(IntDir)BadgeCOM.tlb</TypeLibraryName>
      <DllDataFileName>
      </DllDataFileName>
      <ValidateAllParameters>true</ValidateAllParameters>
    </Midl>
    <ResourceCompile>
      <Culture>0x0409</Culture>
      <AdditionalIncludeDirectories>$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ResourceCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <ModuleDefinitionFile>.\BadgeCOM.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <RegisterOutput>false</RegisterOutput>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;version.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)..\..\..\3rdParty\bin\Release64\Boost_1_52</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>REM ----------------------------------------------------------------
set ErrorTracker=1
echo copy $(OutDir)$(TargetName).dll $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).dll
copy $(OutDir)$(TargetName).dll $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).dll
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=2
rem C:\Cloud\windows-client\3rdParty\bin\Release&gt;tlbimp.exe BadgeCOM.dll /delaysign /publickey:C:\CertBackup\CloudSigning\CloudPlatformCodeSigning.pub /out:BadgeCOMLib.dll /company:Cloud.com /copyright:"Copyright (C ) Cloud.com. All rights reserved." /asmversion:99.9.9.9 /productversion:99.9.9.9
rem C:\Cloud\windows-client\3rdParty\bin\Release&gt;sn.exe -R BadgeCOMLib.dll C:\CertBackup\CloudSigning\CloudPlatformCodeSigning.pfx
rem C:\Cloud\windows-client\3rdParty\bin\Release&gt;copy BadgeCOMLib.dll ..\..\..\CloudSdkSyncSample\bin\release\BadgeCOMLib.dll
rem C:\Cloud\windows-client\3rdParty\bin\Release&gt;copy BadgeCOMLib.dll ..\..\..\CloudSdkSyncSample\bin\debug\BadgeCOMLib.dll

REM ----------------------------------------------------------------
set ErrorTracker=3
echo tlbimp $(OutDir)$(TargetName).dll /out:$(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll /company:Cloud.com /copyright:"Copyright (C ) Cloud.com. All rights reserved." /asmversion:0.2.6.0 /productversion:0.2.6.0
tlbimp $(OutDir)$(TargetName).dll /out:$(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll /company:Cloud.com /copyright:"Copyright (C ) Cloud.com. All rights reserved." /asmversion:0.2.6.0 /productversion:0.2.6.0
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=4
echo copy $(OutDir)$(TargetName).pdb $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).pdb
copy $(OutDir)$(TargetName).pdb $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).pdb
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=5
echo copy $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\release\$(TargetName)Lib.dll
copy $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\release\$(TargetName)Lib.dll
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=6
echo copy $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\debug\$(TargetName)Lib.dll
copy $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\debug\$(TargetName)Lib.dll
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=7
echo if not exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\release\$(PlatformShortName) mkdir $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\release\$(PlatformShortName)
if not exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\release\$(PlatformShortName) mkdir $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\release\$(PlatformShortName)
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=8
echo copy $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).dll $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\release\$(PlatformShortName)
copy $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).dll $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\release\$(PlatformShortName)
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=9
echo if not exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\debug\$(PlatformShortName) mkdir $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\debug\$(PlatformShortName)
if not exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\debug\$(PlatformShortName) mkdir $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\debug\$(PlatformShortName)
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=10
echo copy $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).dll $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\debug\$(PlatformShortName)
copy $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).dll $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\debug\$(PlatformShortName)
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=11
echo regsvr32.exe /u /s $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).dll
regsvr32.exe /u /s $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName).dll
REM do not jump to error condition and reset error level since it is fine if regsvr32.exe fails to unregister dll
set errorlevel=0

REM ---- PLACE THIS CODE AT THE END
REM Exit properly because the build will not fail
REM unless the final step exits with an error code
goto BuildEventOK
:BuildEventFailed
echo POSTBUILDSTEP for $(ProjectName) FAILED at step %ErrorTracker%
set ErrorTracker=
echo ************  POST BUILD STEP COMPLETED WITH ERROR **********************
exit 1
:BuildEventOK
echo POSTBUILDSTEP for $(ProjectName) COMPLETED OK
echo ************  POST BUILD STEP COMPLETED OK **********************

</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>echo ************  START PRE BUILD STEPS **********************

if not "$(Configuration)" == "Release" goto NotRelease
  REM This is 32-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=1
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll
  if exist $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=2
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=3
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=4
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  goto AfterConfigurationCheck
:NotRelease
  REM This is 64-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=5
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll
  if exist $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=6
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=7
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=8
  set ERRORLEVEL=
  echo if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

:AfterConfigurationCheck

REM ---- PLACE THIS CODE AT THE END
REM Exit properly because the build will not fail
REM unless the final step exits with an error code
goto BuildEventOK
:BuildEventFailed
echo errorlevel is %errorlevel%
echo PREBUILDSTEP for $(ProjectName) FAILED at step %ErrorTracker%
set ErrorTracker=
echo ************  PRE BUILD STEP COMPLETED WITH ERROR **********************
exit 1
:BuildEventOK
echo PREBUILDSTEP for $(ProjectName) COMPLETED OK
echo ************  PRE BUILD STEP COMPLETED OK **********************



</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Itanium'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Midl>
      <MkTypLibCompatible>false</MkTypLibCompatible>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <HeaderFileName>BadgeCOM_i.h</HeaderFileName>
      <InterfaceIdentifierFileName>BadgeCOM_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>BadgeCOM_p.c</ProxyFileName>
      <GenerateStublessProxies>true</GenerateStublessProxies>
      <TypeLibraryName>$(IntDir)BadgeCOM.tlb</TypeLibraryName>
      <DllDataFileName>
      </DllDataFileName>
    </Midl>
    <ResourceCompile>
      <Culture>0x0409</Culture>
      <AdditionalIncludeDirectories>$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ResourceCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <ModuleDefinitionFile>.\BadgeCOM.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PreBuildEvent>
      <Command>echo ************  START POST BUILD STEPS **********************

if not "$(Configuration)" == "Release" goto NotRelease
  REM This is 32-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=1
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll
  if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=2
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=3
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=4
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  goto AfterConfigurationCheck
:NotRelease
  REM This is 64-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=5
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll
  if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=6
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=7
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=8
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

:AfterConfigurationCheck

REM ---- PLACE THIS CODE AT THE END
REM Exit properly because the build will not fail
REM unless the final step exits with an error code
goto BuildEventOK
:BuildEventFailed
echo errorlevel is %errorlevel%
echo POSTBUILDSTEP for $(ProjectName) FAILED at step %ErrorTracker%
set ErrorTracker=
echo ************  POST BUILD STEP COMPLETED WITH ERROR **********************
exit 1
:BuildEventOK
echo POSTBUILDSTEP for $(ProjectName) COMPLETED OK
echo ************  POST BUILD STEP COMPLETED OK **********************

</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release64|Itanium'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Midl>
      <MkTypLibCompatible>false</MkTypLibCompatible>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <HeaderFileName>BadgeCOM_i.h</HeaderFileName>
      <InterfaceIdentifierFileName>BadgeCOM_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>BadgeCOM_p.c</ProxyFileName>
      <GenerateStublessProxies>true</GenerateStublessProxies>
      <TypeLibraryName>$(IntDir)BadgeCOM.tlb</TypeLibraryName>
      <DllDataFileName>
      </DllDataFileName>
    </Midl>
    <ResourceCompile>
      <Culture>0x0409</Culture>
      <AdditionalIncludeDirectories>$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ResourceCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <ModuleDefinitionFile>.\BadgeCOM.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PreBuildEvent>
      <Command>echo ************  START POST BUILD STEPS **********************

if not "$(Configuration)" == "Release" goto NotRelease
  REM This is 32-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=1
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll
  if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=2
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=3
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=4
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  goto AfterConfigurationCheck
:NotRelease
  REM This is 64-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=5
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll
  if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=6
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=7
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=8
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

:AfterConfigurationCheck

REM ---- PLACE THIS CODE AT THE END
REM Exit properly because the build will not fail
REM unless the final step exits with an error code
goto BuildEventOK
:BuildEventFailed
echo errorlevel is %errorlevel%
echo POSTBUILDSTEP for $(ProjectName) FAILED at step %ErrorTracker%
set ErrorTracker=
echo ************  POST BUILD STEP COMPLETED WITH ERROR **********************
exit 1
:BuildEventOK
echo POSTBUILDSTEP for $(ProjectName) COMPLETED OK
echo ************  POST BUILD STEP COMPLETED OK **********************

</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(SolutionDir)3rdParty\src\Boost_1_51</AdditionalIncludeDirectories>
      <ExceptionHandling>Async</ExceptionHandling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Midl>
      <MkTypLibCompatible>false</MkTypLibCompatible>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <HeaderFileName>BadgeCOM_i.h</HeaderFileName>
      <InterfaceIdentifierFileName>BadgeCOM_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>BadgeCOM_p.c</ProxyFileName>
      <GenerateStublessProxies>true</GenerateStublessProxies>
      <TypeLibraryName>$(IntDir)BadgeCOM.tlb</TypeLibraryName>
      <DllDataFileName>
      </DllDataFileName>
    </Midl>
    <ResourceCompile>
      <Culture>0x0409</Culture>
      <AdditionalIncludeDirectories>$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ResourceCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <ModuleDefinitionFile>.\BadgeCOM.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <RegisterOutput>false</RegisterOutput>
      <AdditionalDependencies>Psapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;version.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)3rdParty\bin\Release</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>copy $(OutDir)$(TargetName).dll $(SolutionDir)\3rdParty\bin\$(Configuration)\$(TargetName).dll
tlbimp $(OutDir)$(TargetName).dll /out:$(SolutionDir)\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>echo ************  START POST BUILD STEPS **********************

if not "$(Configuration)" == "Release" goto NotRelease
  REM This is 32-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=1
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll
  if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=2
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=3
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=4
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  goto AfterConfigurationCheck
:NotRelease
  REM This is 64-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=5
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll
  if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=6
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=7
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=8
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

:AfterConfigurationCheck

REM ---- PLACE THIS CODE AT THE END
REM Exit properly because the build will not fail
REM unless the final step exits with an error code
goto BuildEventOK
:BuildEventFailed
echo errorlevel is %errorlevel%
echo POSTBUILDSTEP for $(ProjectName) FAILED at step %ErrorTracker%
set ErrorTracker=
echo ************  POST BUILD STEP COMPLETED WITH ERROR **********************
exit 1
:BuildEventOK
echo POSTBUILDSTEP for $(ProjectName) COMPLETED OK
echo ************  POST BUILD STEP COMPLETED OK **********************

</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release64|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(SolutionDir)..\..\..\3rdParty\src\Boost_1_52</AdditionalIncludeDirectories>
      <ExceptionHandling>Async</ExceptionHandling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Midl>
      <MkTypLibCompatible>false</MkTypLibCompatible>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <HeaderFileName>BadgeCOM_i.h</HeaderFileName>
      <InterfaceIdentifierFileName>BadgeCOM_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>BadgeCOM_p.c</ProxyFileName>
      <GenerateStublessProxies>true</GenerateStublessProxies>
      <TypeLibraryName>$(IntDir)BadgeCOM.tlb</TypeLibraryName>
      <DllDataFileName>
      </DllDataFileName>
    </Midl>
    <ResourceCompile>
      <Culture>0x0409</Culture>
      <AdditionalIncludeDirectories>$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ResourceCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <ModuleDefinitionFile>.\BadgeCOM.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <RegisterOutput>false</RegisterOutput>
      <AdditionalDependencies>Psapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;;version.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)..\..\..\3rdParty\bin\Release64\Boost_1_52</AdditionalLibraryDirectories>
      <TypeLibraryFile>$(OutDir)BadgeCom.tlb</TypeLibraryFile>
    </Link>
    <PostBuildEvent>
      <Command>echo ************  START POST BUILD STEPS **********************

REM ----------------------------------------------------------------
set ErrorTracker=1
echo copy $(OutDir)$(TargetName).dll $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\
copy $(OutDir)$(TargetName).dll $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=2
echo tlbimp $(OutDir)$(TargetName).dll /out:$(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll
tlbimp $(OutDir)$(TargetName).dll /out:$(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\$(TargetName)Lib.dll
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=3
echo copy $(OutDir)$(TargetName).pdb $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\
copy $(OutDir)$(TargetName).pdb $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=4
echo copy $(OutDir)$(TargetName).tlb $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\
copy $(OutDir)$(TargetName).tlb $(SolutionDir)..\..\..\3rdParty\bin\$(Configuration)\
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=5
echo if not exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\$(PlatformShortName) mkdir $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\$(PlatformShortName)
if not exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\$(PlatformShortName) mkdir $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\$(PlatformShortName)
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=6
echo copy $(OutDir)$(TargetName).dll $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\$(PlatformShortName)
copy $(OutDir)$(TargetName).dll $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Release\$(PlatformShortName)
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=7
echo if not exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Debug\$(PlatformShortName) mkdir $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Debug\$(PlatformShortName)
if not exist $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Debug\$(PlatformShortName) mkdir $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Debug\$(PlatformShortName)
if errorlevel 1 goto BuildEventFailed

REM ----------------------------------------------------------------
set ErrorTracker=8
echo copy $(OutDir)$(TargetName).dll $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Debug\$(PlatformShortName)
copy $(OutDir)$(TargetName).dll $(SolutionDir)..\..\..\CloudSdkSyncSample\bin\Debug\$(PlatformShortName)
if errorlevel 1 goto BuildEventFailed

REM ---- PLACE THIS CODE AT THE END
REM Exit properly because the build will not fail
REM unless the final step exits with an error code
goto BuildEventOK
:BuildEventFailed
echo POSTBUILDSTEP for $(ProjectName) FAILED at step %ErrorTracker%
set ErrorTracker=
echo ************  POST BUILD STEP COMPLETED WITH ERROR **********************
exit 1
:BuildEventOK
echo POSTBUILDSTEP for $(ProjectName) COMPLETED OK
echo ************  POST BUILD STEP COMPLETED OK **********************

</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>echo ************  START PRE BUILD STEPS **********************

if not "$(Configuration)" == "Release" goto NotRelease
  REM This is 32-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=1
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll
  if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=2
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=3
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=4
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=5
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Debug\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Debug\x86\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Debug\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Debug\x86\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=6
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Debug\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Debug\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Debug\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Debug\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  goto AfterConfigurationCheck
:NotRelease
  REM This is 64-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=7
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll
  if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=8
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=9
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=10
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=11
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Debug\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Debug\amd64\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Debug\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Debug\amd64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=12
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Debug\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Debug\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Debug\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Debug\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

:AfterConfigurationCheck

REM ---- PLACE THIS CODE AT THE END
REM Exit properly because the build will not fail
REM unless the final step exits with an error code
goto BuildEventOK
:BuildEventFailed
echo errorlevel is %errorlevel%
echo PREBUILDSTEP for $(ProjectName) FAILED at step %ErrorTracker%
set ErrorTracker=
echo ************  PRE BUILD STEP COMPLETED WITH ERROR **********************
exit 1
:BuildEventOK
echo PREBUILDSTEP for $(ProjectName) COMPLETED OK
echo ************  PRE BUILD STEP COMPLETED OK **********************

</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release64|ARM'">
    <PreBuildEvent>
      <Command>echo ************  START POST BUILD STEPS **********************

if not "$(Configuration)" == "Release" goto NotRelease
  REM This is 32-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=1
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll
  if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=2
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=3
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=4
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  goto AfterConfigurationCheck
:NotRelease
  REM This is 64-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=5
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll
  if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=6
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=7
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=8
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

:AfterConfigurationCheck

REM ---- PLACE THIS CODE AT THE END
REM Exit properly because the build will not fail
REM unless the final step exits with an error code
goto BuildEventOK
:BuildEventFailed
echo errorlevel is %errorlevel%
echo POSTBUILDSTEP for $(ProjectName) FAILED at step %ErrorTracker%
set ErrorTracker=
echo ************  POST BUILD STEP COMPLETED WITH ERROR **********************
exit 1
:BuildEventOK
echo POSTBUILDSTEP for $(ProjectName) COMPLETED OK
echo ************  POST BUILD STEP COMPLETED OK **********************

</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <PreBuildEvent>
      <Command>echo ************  START POST BUILD STEPS **********************

if not "$(Configuration)" == "Release" goto NotRelease
  REM This is 32-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=1
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll
  if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=2
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=3
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll $(windir)\syswow64\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=4
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\x86\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  goto AfterConfigurationCheck
:NotRelease
  REM This is 64-bit

  REM ----------------------------------------------------------------
  set ErrorTracker=5
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll
  if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=6
  set ERRORLEVEL=
  echo if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)3rdParty\bin\Release64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

  REM ----------------------------------------------------------------
  set ErrorTracker=7
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll $(windir)\system32\regsvr32 /u /s $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll
  if errorlevel 6 goto BuildEventFailed

  set ErrorTracker=8
  set ERRORLEVEL=
  echo if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if exist $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll for /f %%i in ('del $(SolutionDir)CloudSdkSyncSample\bin\Release\amd64\$(TargetName).dll 2^&gt;^&amp;1') do set ERRORLEVEL=1
  if %ERRORLEVEL% == 1 goto BuildEventFailed

:AfterConfigurationCheck

REM ---- PLACE THIS CODE AT THE END
REM Exit properly because the build will not fail
REM unless the final step exits with an error code
goto BuildEventOK
:BuildEventFailed
echo errorlevel is %errorlevel%
echo POSTBUILDSTEP for $(ProjectName) FAILED at step %ErrorTracker%
set ErrorTracker=
echo ************  POST BUILD STEP COMPLETED WITH ERROR **********************
exit 1
:BuildEventOK
echo POSTBUILDSTEP for $(ProjectName) COMPLETED OK
echo ************  POST BUILD STEP COMPLETED OK **********************

</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="BadgeCOM.cpp" />
    <ClCompile Include="BadgeCOM_i.c">
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</CompileAsManaged>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'">false</CompileAsManaged>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release|Itanium'">false</CompileAsManaged>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release64|Itanium'">false</CompileAsManaged>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</CompileAsManaged>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release64|x64'">false</CompileAsManaged>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
      </PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'">
      </PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Itanium'">
      </PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release64|Itanium'">
      </PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
      </PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release64|x64'">
      </PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="BadgeIconFailed.cpp" />
    <ClCompile Include="BadgeIconSelective.cpp" />
    <ClCompile Include="CBadgeIconBase.cpp" />
    <ClCompile Include="BadgeIconSynced.cpp" />
    <ClCompile Include="BadgeIconSyncing.cpp" />
    <ClCompile Include="CBadgeNetPubSubEvents.cpp" />
    <ClCompile Include="dllmain.cpp">
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</CompileAsManaged>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'">false</CompileAsManaged>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release|Itanium'">false</CompileAsManaged>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release64|Itanium'">false</CompileAsManaged>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</CompileAsManaged>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release64|x64'">false</CompileAsManaged>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
      </PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'">
      </PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Itanium'">
      </PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release64|Itanium'">
      </PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
      </PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release64|x64'">
      </PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="PubSubServer.cpp" />
    <ClCompile Include="stdafx.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Itanium'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release64|Itanium'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release64|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="Trace.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="BadgeCOM_i.h" />
    <ClInclude Include="BadgeIconFailed.h" />
    <ClInclude Include="BadgeIconSelective.h" />
    <ClInclude Include="CBadgeIconBase.h" />
    <ClInclude Include="BadgeIconSynced.h" />
    <ClInclude Include="BadgeIconSyncing.h" />
    <ClInclude Include="BoostSemaphore.h" />
    <ClInclude Include="CBadgeNetPubSubEvents.h" />
    <ClInclude Include="dllmain.h" />
    <ClInclude Include="GuidDefinitions.h" />
    <ClInclude Include="PubSubServer.h" />
    <ClInclude Include="Resource.h" />
    <ClInclude Include="resource1.h" />
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="targetver.h" />
    <ClInclude Include="Trace.h" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="BadgeCOM.rc" />
  </ItemGroup>
  <ItemGroup>
    <None Include="BadgeCOM.def" />
    <None Include="BadgeCOM.rgs" />
    <None Include="BadgeIconFailed.rgs" />
    <None Include="BadgeIconSelective.rgs" />
    <None Include="BadgeIconSynced.rgs" />
    <None Include="BadgeIconSyncing.rgs" />
    <None Include="Failed.ico" />
    <None Include="PubSubServer.rgs" />
    <None Include="ReadMe.txt" />
    <None Include="Selective.ico" />
    <None Include="Synced.ico" />
    <None Include="Syncing.ico" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include="BadgeCOM.idl" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="cloud16.bmp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>