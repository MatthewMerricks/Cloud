//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.ApplicationServer.ServiceModel {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.ApplicationServer.ServiceModel.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate-based client authentication is not supported in TransportCredentialOnly security mode. Select the Transport security mode..
        /// </summary>
        internal static string CertificateUnsupportedForHttpTransportCredentialOnly {
            get {
                return ResourceManager.GetString("CertificateUnsupportedForHttpTransportCredentialOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A child element named &apos;{0}&apos; with same key already exists at the same configuration scope. Collection elements must be unique within the same configuration scope (e.g. the same application.config file). Duplicate key value:  &apos;{1}&apos;..
        /// </summary>
        internal static string ConfigDuplicateKeyAtSameScope {
            get {
                return ResourceManager.GetString("ConfigDuplicateKeyAtSameScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; configuration element key cannot be null..
        /// </summary>
        internal static string ConfigElementKeyNull {
            get {
                return ResourceManager.GetString("ConfigElementKeyNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one of the configuration element keys &apos;{0}&apos; must not be null..
        /// </summary>
        internal static string ConfigElementKeysNull {
            get {
                return ResourceManager.GetString("ConfigElementKeysNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration endpoint extension &apos;{0}&apos; could not be found. Verify that this endpoint extension is properly registered in system.serviceModel/extensions/endpointExtensions and that it is spelled correctly..
        /// </summary>
        internal static string ConfigEndpointExtensionNotFound {
            get {
                return ResourceManager.GetString("ConfigEndpointExtensionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The endpoint specified cannot be null or an empty string.  Please specify a valid endpoint.  Valid endpoint values can be found in the system.serviceModel/extensions/endpointExtensions collection..
        /// </summary>
        internal static string ConfigEndpointTypeCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("ConfigEndpointTypeCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start must be between 0 and {0}. Value passed in is {1}..
        /// </summary>
        internal static string ConfigInvalidStartValue {
            get {
                return ResourceManager.GetString("ConfigInvalidStartValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No elements matching the key &apos;{0}&apos; were found in the configuration element collection..
        /// </summary>
        internal static string ConfigKeyNotFoundInElementCollection {
            get {
                return ResourceManager.GetString("ConfigKeyNotFoundInElementCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key does not match the indexer key. When setting the value of a specific index, the key of the desired value must match the index at which it is being set. Key on element (expected value): {0}. Key provided to indexer: {1}..
        /// </summary>
        internal static string ConfigKeysDoNotMatch {
            get {
                return ResourceManager.GetString("ConfigKeysDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; configuration section cannot be created. The machine.config file is missing information. Verify that this configuration section is properly registered and that you have correctly spelled the section name. For Windows Communication Foundation sections, run ServiceModelReg.exe -i to fix this error..
        /// </summary>
        internal static string ConfigSectionNotFound {
            get {
                return ResourceManager.GetString("ConfigSectionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The inner listener factory of {0} must be set before this operation..
        /// </summary>
        internal static string InnerListenerFactoryNotSet {
            get {
                return ResourceManager.GetString("InnerListenerFactoryNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} registered as a policy extension does not implement IPolicyImportExtension.
        /// </summary>
        internal static string InvalidPolicyExtensionTypeInConfig {
            get {
                return ResourceManager.GetString("InvalidPolicyExtensionTypeInConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} registered as a WSDL extension does not implement IWsdlImportExtension..
        /// </summary>
        internal static string InvalidWsdlExtensionTypeInConfig {
            get {
                return ResourceManager.GetString("InvalidWsdlExtensionTypeInConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation &apos;{0}&apos; in contract &apos;{1}&apos; has both &apos;{2}&apos; and &apos;{3}&apos;; only one can be present..
        /// </summary>
        internal static string MultipleWebAttributes {
            get {
                return ResourceManager.GetString("MultipleWebAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find endpoint element with name &apos;{0}&apos; and contract &apos;{1}&apos; in the ServiceModel client configuration section. This might be because no configuration file was found for your application, or because no endpoint element matching this name could be found in the client element..
        /// </summary>
        internal static string SFxConfigChannelConfigurationNotFound {
            get {
                return ResourceManager.GetString("SFxConfigChannelConfigurationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find default endpoint element that references contract &apos;{0}&apos; in the ServiceModel client configuration section. This might be because no configuration file was found for your application, or because no endpoint element matching this contract could be found in the client element..
        /// </summary>
        internal static string SFxConfigContractNotFound {
            get {
                return ResourceManager.GetString("SFxConfigContractNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load the X.509 certificate identity specified in the configuration.
        /// </summary>
        internal static string UnableToLoadCertificateIdentity {
            get {
                return ResourceManager.GetString("UnableToLoadCertificateIdentity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UriTemplate does not support &apos;{0}&apos; as a valid format for a segment or a query part..
        /// </summary>
        internal static string UTInvalidFormatSegmentOrQueryPart {
            get {
                return ResourceManager.GetString("UTInvalidFormatSegmentOrQueryPart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UriTemplateTable (with allowDuplicateEquivalentUriTemplates = false) does not support both &apos;{0}&apos; and &apos;{1}&apos;, since they are equivalent. Call MakeReadOnly with allowDuplicateEquivalentUriTemplates = true to use both of these UriTemplates in the same table. See the documentation for UriTemplateTable for more detail..
        /// </summary>
        internal static string UTTDuplicate {
            get {
                return ResourceManager.GetString("UTTDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} registered as a WSDL extension does not have a public default constructor. WSDL extensions must have a public default constructor..
        /// </summary>
        internal static string WsdlExtensionTypeRequiresDefaultConstructor {
            get {
                return ResourceManager.GetString("WsdlExtensionTypeRequiresDefaultConstructor", resourceCulture);
            }
        }
    }
}
