//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.ApplicationServer.Common {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SRCore {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SRCore() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.ApplicationServer.Common.SRCore", typeof(SRCore).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ActionItem was already scheduled for execution that hasn&apos;t been completed yet..
        /// </summary>
        internal static string ActionItemIsAlreadyScheduled {
            get {
                return ResourceManager.GetString("ActionItemIsAlreadyScheduled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument {0} is null or empty..
        /// </summary>
        internal static string ArgumentNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument passed must be a non-negative number..
        /// </summary>
        internal static string ArgumentOutOfRange_NeedNonNegNum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedNonNegNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument passed must be in the range {0} - {1}..
        /// </summary>
        internal static string ArgumentOutOfRange_NeedValidId {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedValidId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async Callback threw an exception..
        /// </summary>
        internal static string AsyncCallbackThrewException {
            get {
                return ResourceManager.GetString("AsyncCallbackThrewException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End cannot be called twice on an AsyncResult..
        /// </summary>
        internal static string AsyncResultAlreadyEnded {
            get {
                return ResourceManager.GetString("AsyncResultAlreadyEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IAsyncResult implementation &apos;{0}&apos; tried to complete a single operation multiple times. This could be caused by an incorrect application IAsyncResult implementation or other extensibility code, such as an IAsyncResult that returns incorrect CompletedSynchronously values or invokes the AsyncCallback multiple times..
        /// </summary>
        internal static string AsyncResultCompletedTwice {
            get {
                return ResourceManager.GetString("AsyncResultCompletedTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception was thrown from a TransactionScope used to flow a transaction into an asynchronous operation..
        /// </summary>
        internal static string AsyncTransactionException {
            get {
                return ResourceManager.GetString("AsyncTransactionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to allocate a managed memory buffer of {0} bytes. The amount of available memory may be low..
        /// </summary>
        internal static string BufferAllocationFailed {
            get {
                return ResourceManager.GetString("BufferAllocationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size quota for this stream ({0}) has been exceeded..
        /// </summary>
        internal static string BufferedOutputStreamQuotaExceeded {
            get {
                return ResourceManager.GetString("BufferedOutputStreamQuotaExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This buffer cannot be returned to the buffer manager because it is the wrong size..
        /// </summary>
        internal static string BufferIsNotRightSizeForBufferManager {
            get {
                return ResourceManager.GetString("BufferIsNotRightSizeForBufferManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert object &apos;{0}&apos; to type &apos;{1}&apos;..
        /// </summary>
        internal static string CannotConvertObject {
            get {
                return ResourceManager.GetString("CannotConvertObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This dictionary is read only and cannot be modified..
        /// </summary>
        internal static string DictionaryIsReadOnly {
            get {
                return ResourceManager.GetString("DictionaryIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of string arguments passed to Etw WriteEvent has exceeded the max allowed limit of {0}..
        /// </summary>
        internal static string EtwAPIMaxStringCountExceeded {
            get {
                return ResourceManager.GetString("EtwAPIMaxStringCountExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of arguments passed to Etw WriteEvent has exceeded the max allowed limit of {0}..
        /// </summary>
        internal static string EtwMaxNumberArgumentsExceeded {
            get {
                return ResourceManager.GetString("EtwMaxNumberArgumentsExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Etw registration failed with error code {0}..
        /// </summary>
        internal static string EtwRegistrationFailed {
            get {
                return ResourceManager.GetString("EtwRegistrationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unrecoverable error occurred. For diagnostic purposes, this English message is associated with the failure: &apos;{0}&apos;..
        /// </summary>
        internal static string FailFastMessage {
            get {
                return ResourceManager.GetString("FailFastMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incorrect IAsyncResult was provided to an &apos;End&apos; method. The IAsyncResult object passed to &apos;End&apos; must be the one returned from the matching &apos;Begin&apos; or passed to the callback provided to &apos;Begin&apos;..
        /// </summary>
        internal static string InvalidAsyncResult {
            get {
                return ResourceManager.GetString("InvalidAsyncResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once. The type {0} could be the incorrect implementation..
        /// </summary>
        internal static string InvalidAsyncResultImplementation {
            get {
                return ResourceManager.GetString("InvalidAsyncResultImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once..
        /// </summary>
        internal static string InvalidAsyncResultImplementationGeneric {
            get {
                return ResourceManager.GetString("InvalidAsyncResultImplementationGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A null value was returned from an async &apos;Begin&apos; method or passed to an AsyncCallback. Async &apos;Begin&apos; implementations must return a non-null IAsyncResult and pass the same IAsyncResult object as the parameter to the AsyncCallback..
        /// </summary>
        internal static string InvalidNullAsyncResult {
            get {
                return ResourceManager.GetString("InvalidNullAsyncResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object synchronization method was called from an unsynchronized block of code..
        /// </summary>
        internal static string InvalidSemaphoreExit {
            get {
                return ResourceManager.GetString("InvalidSemaphoreExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must cancel the previous timer before setting a new one..
        /// </summary>
        internal static string MustCancelOldTimer {
            get {
                return ResourceManager.GetString("MustCancelOldTimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read not supported on this stream..
        /// </summary>
        internal static string ReadNotSupported {
            get {
                return ResourceManager.GetString("ReadNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Seek not supported on this stream..
        /// </summary>
        internal static string SeekNotSupported {
            get {
                return ResourceManager.GetString("SeekNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected failure occurred. Applications should not attempt to handle this error. For diagnostic purposes, this English message is associated with the failure: {0}..
        /// </summary>
        internal static string ShipAssertExceptionMessage {
            get {
                return ResourceManager.GetString("ShipAssertExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Dequeue operation timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string TimeoutInputQueueDequeue {
            get {
                return ResourceManager.GetString("TimeoutInputQueueDequeue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} must be a non-negative timeout value. Provided value was {1}..
        /// </summary>
        internal static string TimeoutMustBeNonNegative {
            get {
                return ResourceManager.GetString("TimeoutMustBeNonNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} must be a positive timeout value. Provided value was {1}..
        /// </summary>
        internal static string TimeoutMustBePositive {
            get {
                return ResourceManager.GetString("TimeoutMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string TimeoutOnOperation {
            get {
                return ResourceManager.GetString("TimeoutOnOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be non-negative..
        /// </summary>
        internal static string ValueMustBeNonNegative {
            get {
                return ResourceManager.GetString("ValueMustBeNonNegative", resourceCulture);
            }
        }
    }
}
