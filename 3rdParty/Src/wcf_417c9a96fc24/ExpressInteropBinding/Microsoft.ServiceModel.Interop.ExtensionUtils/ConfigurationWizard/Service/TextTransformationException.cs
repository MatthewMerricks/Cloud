// <copyright file="TextTransformationException.cs" company="Microsoft Corporation">
// Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>

namespace Microsoft.ServiceModel.Interop.ConfigurationWizard.Services
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// Class to hold errors generated by T4 transformation
    /// </summary>
    [Serializable]
    public class TextTransformationException : Exception
    {
        /// <summary>
        /// Initializes a new instance of the TextTransformationException class
        /// </summary>
        public TextTransformationException()
        {
        }

        /// <summary>
        /// Initializes a new instance of the TextTransformationException class with a message
        /// </summary>
        /// <param name="message">Message to be included in the exception</param>
        public TextTransformationException(string message)
            : base(message)
        {
        }

        /// <summary>
        /// Initializes a new instance of the TextTransformationException class with a message
        /// </summary>
        /// <param name="message">Message to be included in the exception</param>
        /// <param name="inner">Inner exception</param>
        public TextTransformationException(string message, Exception inner)
            : base(message, inner)
        {
        }

        /// <summary>
        /// Initializes a new instance of the TextTransformationException class using serialization
        /// </summary>
        /// <param name="info">Serialization info</param>
        /// <param name="context">Serialization context</param>
        protected TextTransformationException(SerializationInfo info, StreamingContext context)
            : base(info, context)
        {
        }
    }
}

