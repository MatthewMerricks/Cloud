//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BigShelfModel", "FK_Books_Categories", "CategoryNames", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BigShelf.Models.CategoryName), "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BigShelf.Models.Book), true)]
[assembly: EdmRelationshipAttribute("BigShelfModel", "FK_FlaggedBooks_Books", "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BigShelf.Models.Book), "FlaggedBooks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BigShelf.Models.FlaggedBook), true)]
[assembly: EdmRelationshipAttribute("BigShelfModel", "FK_Categories_CategoryNames", "CategoryNames", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BigShelf.Models.CategoryName), "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BigShelf.Models.Category), true)]
[assembly: EdmRelationshipAttribute("BigShelfModel", "FK_Categories_Profiles", "Profiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BigShelf.Models.Profile), "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BigShelf.Models.Category), true)]
[assembly: EdmRelationshipAttribute("BigShelfModel", "FK_FlaggedBooks_Profiles", "Profiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BigShelf.Models.Profile), "FlaggedBooks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BigShelf.Models.FlaggedBook), true)]
[assembly: EdmRelationshipAttribute("BigShelfModel", "FK_Friends_Friend", "Profiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BigShelf.Models.Profile), "Friends", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BigShelf.Models.Friend), true)]
[assembly: EdmRelationshipAttribute("BigShelfModel", "FK_Friends_Profile", "Profiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BigShelf.Models.Profile), "Friends", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BigShelf.Models.Friend), true)]

#endregion

namespace BigShelf.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BigShelfEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BigShelfEntities object using the connection string found in the 'BigShelfEntities' section of the application configuration file.
        /// </summary>
        public BigShelfEntities() : base("name=BigShelfEntities", "BigShelfEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BigShelfEntities object.
        /// </summary>
        public BigShelfEntities(string connectionString) : base(connectionString, "BigShelfEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BigShelfEntities object.
        /// </summary>
        public BigShelfEntities(EntityConnection connection) : base(connection, "BigShelfEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Book> Books
        {
            get
            {
                if ((_Books == null))
                {
                    _Books = base.CreateObjectSet<Book>("Books");
                }
                return _Books;
            }
        }
        private ObjectSet<Book> _Books;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryName> CategoryNames
        {
            get
            {
                if ((_CategoryNames == null))
                {
                    _CategoryNames = base.CreateObjectSet<CategoryName>("CategoryNames");
                }
                return _CategoryNames;
            }
        }
        private ObjectSet<CategoryName> _CategoryNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FlaggedBook> FlaggedBooks
        {
            get
            {
                if ((_FlaggedBooks == null))
                {
                    _FlaggedBooks = base.CreateObjectSet<FlaggedBook>("FlaggedBooks");
                }
                return _FlaggedBooks;
            }
        }
        private ObjectSet<FlaggedBook> _FlaggedBooks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Friend> Friends
        {
            get
            {
                if ((_Friends == null))
                {
                    _Friends = base.CreateObjectSet<Friend>("Friends");
                }
                return _Friends;
            }
        }
        private ObjectSet<Friend> _Friends;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Profile> Profiles
        {
            get
            {
                if ((_Profiles == null))
                {
                    _Profiles = base.CreateObjectSet<Profile>("Profiles");
                }
                return _Profiles;
            }
        }
        private ObjectSet<Profile> _Profiles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Books EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBooks(Book book)
        {
            base.AddObject("Books", book);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryNames(CategoryName categoryName)
        {
            base.AddObject("CategoryNames", categoryName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FlaggedBooks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlaggedBooks(FlaggedBook flaggedBook)
        {
            base.AddObject("FlaggedBooks", flaggedBook);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Friends EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFriends(Friend friend)
        {
            base.AddObject("Friends", friend);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfiles(Profile profile)
        {
            base.AddObject("Profiles", profile);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigShelfModel", Name="Book")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Book : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Book object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="aSIN">Initial value of the ASIN property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="author">Initial value of the Author property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="publishDate">Initial value of the PublishDate property.</param>
        /// <param name="addedDate">Initial value of the AddedDate property.</param>
        public static Book CreateBook(global::System.Int32 id, global::System.Int32 categoryId, global::System.String aSIN, global::System.String title, global::System.String author, global::System.String description, global::System.DateTime publishDate, global::System.DateTime addedDate)
        {
            Book book = new Book();
            book.Id = id;
            book.CategoryId = categoryId;
            book.ASIN = aSIN;
            book.Title = title;
            book.Author = author;
            book.Description = description;
            book.PublishDate = publishDate;
            book.AddedDate = addedDate;
            return book;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ASIN
        {
            get
            {
                return _ASIN;
            }
            set
            {
                OnASINChanging(value);
                ReportPropertyChanging("ASIN");
                _ASIN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ASIN");
                OnASINChanged();
            }
        }
        private global::System.String _ASIN;
        partial void OnASINChanging(global::System.String value);
        partial void OnASINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PublishDate
        {
            get
            {
                return _PublishDate;
            }
            set
            {
                OnPublishDateChanging(value);
                ReportPropertyChanging("PublishDate");
                _PublishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishDate");
                OnPublishDateChanged();
            }
        }
        private global::System.DateTime _PublishDate;
        partial void OnPublishDateChanging(global::System.DateTime value);
        partial void OnPublishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddedDate
        {
            get
            {
                return _AddedDate;
            }
            set
            {
                OnAddedDateChanging(value);
                ReportPropertyChanging("AddedDate");
                _AddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDate");
                OnAddedDateChanged();
            }
        }
        private global::System.DateTime _AddedDate;
        partial void OnAddedDateChanging(global::System.DateTime value);
        partial void OnAddedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_Books_Categories", "CategoryNames")]
        public CategoryName CategoryName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryName>("BigShelfModel.FK_Books_Categories", "CategoryNames").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryName>("BigShelfModel.FK_Books_Categories", "CategoryNames").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CategoryName> CategoryNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryName>("BigShelfModel.FK_Books_Categories", "CategoryNames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CategoryName>("BigShelfModel.FK_Books_Categories", "CategoryNames", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_FlaggedBooks_Books", "FlaggedBooks")]
        public EntityCollection<FlaggedBook> FlaggedBooks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlaggedBook>("BigShelfModel.FK_FlaggedBooks_Books", "FlaggedBooks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlaggedBook>("BigShelfModel.FK_FlaggedBooks_Books", "FlaggedBooks", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigShelfModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.Int32 profileId, global::System.Int32 categoryId)
        {
            Category category = new Category();
            category.Id = id;
            category.ProfileId = profileId;
            category.CategoryId = categoryId;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                OnProfileIdChanging(value);
                ReportPropertyChanging("ProfileId");
                _ProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileId");
                OnProfileIdChanged();
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_Categories_CategoryNames", "CategoryNames")]
        public CategoryName CategoryName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryName>("BigShelfModel.FK_Categories_CategoryNames", "CategoryNames").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryName>("BigShelfModel.FK_Categories_CategoryNames", "CategoryNames").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CategoryName> CategoryNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryName>("BigShelfModel.FK_Categories_CategoryNames", "CategoryNames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CategoryName>("BigShelfModel.FK_Categories_CategoryNames", "CategoryNames", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_Categories_Profiles", "Profiles")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("BigShelfModel.FK_Categories_Profiles", "Profiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("BigShelfModel.FK_Categories_Profiles", "Profiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("BigShelfModel.FK_Categories_Profiles", "Profiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("BigShelfModel.FK_Categories_Profiles", "Profiles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigShelfModel", Name="CategoryName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryName object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CategoryName CreateCategoryName(global::System.Int32 id, global::System.String name)
        {
            CategoryName categoryName = new CategoryName();
            categoryName.Id = id;
            categoryName.Name = name;
            return categoryName;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_Books_Categories", "Books")]
        public EntityCollection<Book> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Book>("BigShelfModel.FK_Books_Categories", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Book>("BigShelfModel.FK_Books_Categories", "Books", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_Categories_CategoryNames", "Categories")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("BigShelfModel.FK_Categories_CategoryNames", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("BigShelfModel.FK_Categories_CategoryNames", "Categories", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigShelfModel", Name="FlaggedBook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FlaggedBook : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FlaggedBook object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="bookId">Initial value of the BookId property.</param>
        /// <param name="rating">Initial value of the Rating property.</param>
        /// <param name="isFlaggedToRead">Initial value of the IsFlaggedToRead property.</param>
        public static FlaggedBook CreateFlaggedBook(global::System.Int32 id, global::System.Int32 profileId, global::System.Int32 bookId, global::System.Int32 rating, global::System.Int32 isFlaggedToRead)
        {
            FlaggedBook flaggedBook = new FlaggedBook();
            flaggedBook.Id = id;
            flaggedBook.ProfileId = profileId;
            flaggedBook.BookId = bookId;
            flaggedBook.Rating = rating;
            flaggedBook.IsFlaggedToRead = isFlaggedToRead;
            return flaggedBook;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                OnProfileIdChanging(value);
                ReportPropertyChanging("ProfileId");
                _ProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileId");
                OnProfileIdChanged();
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.Int32 _Rating;
        partial void OnRatingChanging(global::System.Int32 value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IsFlaggedToRead
        {
            get
            {
                return _IsFlaggedToRead;
            }
            set
            {
                OnIsFlaggedToReadChanging(value);
                ReportPropertyChanging("IsFlaggedToRead");
                _IsFlaggedToRead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFlaggedToRead");
                OnIsFlaggedToReadChanged();
            }
        }
        private global::System.Int32 _IsFlaggedToRead;
        partial void OnIsFlaggedToReadChanging(global::System.Int32 value);
        partial void OnIsFlaggedToReadChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_FlaggedBooks_Books", "Books")]
        public Book Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("BigShelfModel.FK_FlaggedBooks_Books", "Books").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("BigShelfModel.FK_FlaggedBooks_Books", "Books").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Book> BookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("BigShelfModel.FK_FlaggedBooks_Books", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Book>("BigShelfModel.FK_FlaggedBooks_Books", "Books", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_FlaggedBooks_Profiles", "Profiles")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("BigShelfModel.FK_FlaggedBooks_Profiles", "Profiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("BigShelfModel.FK_FlaggedBooks_Profiles", "Profiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("BigShelfModel.FK_FlaggedBooks_Profiles", "Profiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("BigShelfModel.FK_FlaggedBooks_Profiles", "Profiles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigShelfModel", Name="Friend")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Friend : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Friend object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="friendId">Initial value of the FriendId property.</param>
        public static Friend CreateFriend(global::System.Int32 id, global::System.Int32 profileId, global::System.Int32 friendId)
        {
            Friend friend = new Friend();
            friend.Id = id;
            friend.ProfileId = profileId;
            friend.FriendId = friendId;
            return friend;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                OnProfileIdChanging(value);
                ReportPropertyChanging("ProfileId");
                _ProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileId");
                OnProfileIdChanged();
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FriendId
        {
            get
            {
                return _FriendId;
            }
            set
            {
                OnFriendIdChanging(value);
                ReportPropertyChanging("FriendId");
                _FriendId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FriendId");
                OnFriendIdChanged();
            }
        }
        private global::System.Int32 _FriendId;
        partial void OnFriendIdChanging(global::System.Int32 value);
        partial void OnFriendIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_Friends_Friend", "Profiles")]
        public Profile FriendProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("BigShelfModel.FK_Friends_Friend", "Profiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("BigShelfModel.FK_Friends_Friend", "Profiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> FriendProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("BigShelfModel.FK_Friends_Friend", "Profiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("BigShelfModel.FK_Friends_Friend", "Profiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_Friends_Profile", "Profiles")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("BigShelfModel.FK_Friends_Profile", "Profiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("BigShelfModel.FK_Friends_Profile", "Profiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("BigShelfModel.FK_Friends_Profile", "Profiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("BigShelfModel.FK_Friends_Profile", "Profiles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigShelfModel", Name="Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Profile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Profile CreateProfile(global::System.Int32 id, global::System.String name)
        {
            Profile profile = new Profile();
            profile.Id = id;
            profile.Name = name;
            return profile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AspNetUserGuid
        {
            get
            {
                return _AspNetUserGuid;
            }
            set
            {
                OnAspNetUserGuidChanging(value);
                ReportPropertyChanging("AspNetUserGuid");
                _AspNetUserGuid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AspNetUserGuid");
                OnAspNetUserGuidChanged();
            }
        }
        private global::System.String _AspNetUserGuid;
        partial void OnAspNetUserGuidChanging(global::System.String value);
        partial void OnAspNetUserGuidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_Categories_Profiles", "Categories")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("BigShelfModel.FK_Categories_Profiles", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("BigShelfModel.FK_Categories_Profiles", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_FlaggedBooks_Profiles", "FlaggedBooks")]
        public EntityCollection<FlaggedBook> FlaggedBooks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlaggedBook>("BigShelfModel.FK_FlaggedBooks_Profiles", "FlaggedBooks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlaggedBook>("BigShelfModel.FK_FlaggedBooks_Profiles", "FlaggedBooks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigShelfModel", "FK_Friends_Profile", "Friends")]
        public EntityCollection<Friend> Friends
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Friend>("BigShelfModel.FK_Friends_Profile", "Friends");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Friend>("BigShelfModel.FK_Friends_Profile", "Friends", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
